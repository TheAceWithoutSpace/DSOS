{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\Dsos\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\Pages\\\\Files.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Files extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uploadPercentage: 0\n    };\n\n    this.UploadFiles = ({\n      target: {\n        files\n      }\n    }) => {\n      console.log(files[0]);\n      let data = new FormData();\n      data.append('file', files[0]);\n      const options = {\n        onUploadProgress: progressEvent => {\n          const {\n            loaded,\n            total\n          } = progressEvent;\n          let percent = Math.floor(loaded * 100 / total);\n          console.log(`${loaded}kb of ${total}kb | ${percent}%`);\n\n          if (percent < 100) {\n            this.setState({\n              uploadPercentage: percent\n            });\n          }\n        }\n      };\n      axios.post(\"/File/upload\", data, options).then(res => {\n        console.log(res);\n        this.setState({\n          avatar: res.data.url,\n          uploadPercentage: 100\n        }, () => {\n          setTimeout(() => {\n            this.setState({\n              uploadPercentage: 0\n            });\n          }, 1000);\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      onChange: this.UploadFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Files;","map":{"version":3,"sources":["C:/Users/ben78/Desktop/Dsos/DSOS/Frontend/dsos/src/Pages/Files.js"],"names":["React","axios","Files","Component","state","uploadPercentage","UploadFiles","target","files","console","log","data","FormData","append","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","setState","post","then","res","avatar","url","setTimeout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEzB;AACFC,MAAAA,gBAAgB,EAAE;AADhB,KAFyB;;AAAA,SAM/BC,WAN+B,GAMnB,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA0B;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAaF,KAAK,CAAC,CAAD,CAAlB;AACA,UAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAa,MAAb,EAAqBL,KAAK,CAAC,CAAD,CAA1B;AAEA,YAAMM,OAAO,GAAG;AACdC,QAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACnC,gBAAM;AAACC,YAAAA,MAAD;AAASC,YAAAA;AAAT,cAAkBF,aAAxB;AACA,cAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAaJ,MAAM,GAAG,GAAV,GAAiBC,KAA7B,CAAd;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAc,GAAEO,MAAO,SAAQC,KAAM,QAAOC,OAAQ,GAApD;;AAEA,cAAIA,OAAO,GAAG,GAAd,EAAmB;AACjB,iBAAKG,QAAL,CAAc;AAAEjB,cAAAA,gBAAgB,EAAEc;AAApB,aAAd;AACD;AACF;AATa,OAAhB;AAYAlB,MAAAA,KAAK,CAACsB,IAAN,CAAW,cAAX,EAA2BZ,IAA3B,EAAiCG,OAAjC,EAA0CU,IAA1C,CAA+CC,GAAG,IAAI;AAClDhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA,aAAKH,QAAL,CAAc;AAAEI,UAAAA,MAAM,EAAED,GAAG,CAACd,IAAJ,CAASgB,GAAnB;AAAwBtB,UAAAA,gBAAgB,EAAE;AAA1C,SAAd,EAA+D,MAAI;AACjEuB,UAAAA,UAAU,CAAC,MAAM;AACf,iBAAKN,QAAL,CAAc;AAAEjB,cAAAA,gBAAgB,EAAE;AAApB,aAAd;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAJD;AAKH,OAPD;AAQD,KA/B4B;AAAA;;AAiC/BwB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,QAAQ,EAAE,KAAKvB,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvC8B;;AA0CnC,eAAeJ,KAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Files extends React.Component{\r\n\r\n    state={\r\n        uploadPercentage: 0,\r\n    }\r\n\r\n    UploadFiles=({ target: { files } }) =>{\r\n        console.log( files[0] )\r\n        let data = new FormData();\r\n        data.append( 'file', files[0] )\r\n    \r\n        const options = {\r\n          onUploadProgress: (progressEvent) => {\r\n            const {loaded, total} = progressEvent;\r\n            let percent = Math.floor( (loaded * 100) / total )\r\n            console.log( `${loaded}kb of ${total}kb | ${percent}%` );\r\n    \r\n            if( percent < 100 ){\r\n              this.setState({ uploadPercentage: percent })\r\n            }\r\n          }\r\n        }\r\n    \r\n        axios.post(\"/File/upload\", data, options).then(res => { \r\n            console.log(res)\r\n            this.setState({ avatar: res.data.url, uploadPercentage: 100 }, ()=>{\r\n              setTimeout(() => {\r\n                this.setState({ uploadPercentage: 0 })\r\n              }, 1000);\r\n            })\r\n        })\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"file\" className=\"form-control\" onChange={this.UploadFiles}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Files;\r\n"]},"metadata":{},"sourceType":"module"}