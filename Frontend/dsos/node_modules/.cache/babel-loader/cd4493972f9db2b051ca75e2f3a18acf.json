{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        n: 0\n      },\n      Requests: [],\n      SvmData: []\n    };\n  }\n\n  setdata(Svm) {\n    console.log(Svm);\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`).then(res => {\n      let Amount = 0;\n      res.data.Req.forEach(Req => {\n        Amount += Req.Amount;\n      });\n      console.log(Amount);\n      return Amount;\n    });\n  }\n\n  async SetData(Svm) {\n    console.log(Svm);\n    let value;\n    value = await this.setdata(Svm);\n    let array = [0, 1000];\n    console.log(value);\n    this.setState({\n      chartData: {\n        labels: ['Free', 'Used'],\n        datasets: [{\n          label: \"Requests\",\n          backgroundColor: [\"rgba(175, 146, 234, 0.65)\", \"rgba(245, 73, 120, 0.65)\"],\n          data: array\n        }]\n      }\n    });\n  }\n\n  Charts() {\n    return this.props.SVMS.map((currntSvm, index) => {\n      if (this.state.chartData.n === 0) this.SetData(currntSvm);\n      console.log(this.state.chartData);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, this.state.chartData.datasets ? /*#__PURE__*/React.createElement(Chart, {\n        type: \"Pie\",\n        title: currntSvm,\n        chartData: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","SystemGrafth","constructor","props","state","chartData","n","Requests","SvmData","setdata","Svm","console","log","get","then","res","Amount","data","Req","forEach","SetData","value","array","setState","labels","datasets","label","backgroundColor","Charts","SVMS","map","currntSvm","index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAuC,OAAvC;AACC,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAoC;AAChDK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAAC;AAACC,QAAAA,CAAC,EAAC;AAAH,OADA;AAEVC,MAAAA,QAAQ,EAAC,EAFC;AAGVC,MAAAA,OAAO,EAAC;AAHE,KAAX;AAKN;;AACDC,EAAAA,OAAO,CAACC,GAAD,EAAK;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAX,IAAAA,KAAK,CAACc,GAAN,CAAW,qCAAoCH,GAAI,EAAnD,EACCI,IADD,CACOC,GAAD,IAAO;AACT,UAAIC,MAAM,GAAC,CAAX;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,OAAb,CAAqBD,GAAG,IAAI;AACxBF,QAAAA,MAAM,IAAEE,GAAG,CAACF,MAAZ;AACH,OAFD;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,aAAOA,MAAP;AACH,KARD;AASH;;AACD,QAAMI,OAAN,CAAcV,GAAd,EAAkB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAIW,KAAJ;AACAA,IAAAA,KAAK,GAAC,MAAM,KAAKZ,OAAL,CAAaC,GAAb,CAAZ;AACA,QAAIY,KAAK,GAAC,CAAC,CAAD,EAAI,IAAJ,CAAV;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,SAAKE,QAAL,CAAc;AACVlB,MAAAA,SAAS,EAAC;AACNmB,QAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,MAAR,CADD;AAENC,QAAAA,QAAQ,EAAC,CAAC;AACTC,UAAAA,KAAK,EAAC,UADG;AAETC,UAAAA,eAAe,EAAC,CAAC,2BAAD,EACC,0BADD,CAFP;AAKTV,UAAAA,IAAI,EAACK;AALI,SAAD;AAFH;AADA,KAAd;AAaF;;AAEDM,EAAAA,MAAM,GAAE;AACL,WACI,KAAKzB,KAAL,CAAW0B,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAWC,KAAX,KAAmB;AACnC,UAAG,KAAK5B,KAAL,CAAWC,SAAX,CAAqBC,CAArB,KAAyB,CAA5B,EACI,KAAKc,OAAL,CAAaW,SAAb;AACJpB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,SAAvB;AACA,0BACQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAE2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK5B,KAAL,CAAWC,SAAX,CAAqBoB,QAArB,gBACG,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAEM,SAAzB;AAAoC,QAAA,SAAS,EAAE,KAAK3B,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEA,IAHL,CADR;AAOH,KAXD,CADJ;AAeF;;AAEE6B,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,MAAL,EADL,CADJ;AAKH;;AAlE8C","sourcesContent":["import React,{Component, Fragment}from 'react';\r\n import axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{n:0},\r\n        Requests:[],\r\n        SvmData:[],\r\n       }\r\n}\r\nsetdata(Svm){\r\n    console.log(Svm)\r\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`)\r\n    .then((res)=>{ \r\n        let Amount=0;\r\n        res.data.Req.forEach(Req => {\r\n            Amount+=Req.Amount;\r\n        });\r\n        console.log(Amount)\r\n        return Amount;\r\n    })\r\n}\r\nasync SetData(Svm){ \r\n    console.log(Svm)\r\n    let value;\r\n    value=await this.setdata(Svm)\r\n    let array=[0,(1000)];\r\n    console.log(value)\r\n    this.setState({\r\n        chartData:{\r\n            labels:['Free','Used'],\r\n            datasets:[{\r\n             label:\"Requests\",\r\n             backgroundColor:[\"rgba(175, 146, 234, 0.65)\",\r\n                              \"rgba(245, 73, 120, 0.65)\",\r\n                              ],\r\n             data:array\r\n            },\r\n            ]\r\n        }\r\n    })\r\n }\r\n\r\n Charts(){\r\n    return(\r\n        this.props.SVMS.map((currntSvm,index)=>{\r\n            if(this.state.chartData.n===0)\r\n                this.SetData(currntSvm);\r\n            console.log(this.state.chartData)\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.state.chartData.datasets?\r\n                            <Chart type='Pie' title={currntSvm} chartData={this.state}/>\r\n                        :null}\r\n                    </div>\r\n                )\r\n        })\r\n    )\r\n\r\n }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}