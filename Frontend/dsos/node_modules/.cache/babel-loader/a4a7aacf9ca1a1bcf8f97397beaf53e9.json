{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nimport chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        n: 0\n      },\n      Requests: [],\n      SVM: '',\n      Chartdata: '',\n      TotalAmmount: '',\n      message: ''\n    }; //    this.setdata=this.setdata.bind(this);\n  }\n\n  async componentDidMount(nextProps) {\n    console.log(this.props + \"||\" + nextProps);\n\n    if (this.props !== nextProps) {\n      let TotalAmount = 0;\n      let UsedAmount = 0;\n      let Chartdata = [];\n      let SVMSArray = [];\n      let SvmsName = [];\n      let SvmsAmount = [];\n      let ChartTitle = '';\n      await axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`).then(res => {\n        TotalAmount = res.data.Req[0].TotalAmount;\n        UsedAmount = res.data.Req[0].Amount;\n        console.log(res.data.Req[0]);\n      });\n      await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`).then(res => SVMSArray = res.data.Req);\n      SvmsAmount.push(UsedAmount / TotalAmount * 100);\n      SvmsName.push('Free');\n      SVMSArray.forEach(SVM => {\n        console.log(SVM);\n\n        if (SVM.Amount !== 0) {\n          console.log(SVM);\n          SvmsAmount.push(SVM.Amount / TotalAmount * 100);\n          SvmsName.push(SVM.name);\n        }\n      });\n      Chartdata.push({\n        chartData: {\n          labels: SvmsName,\n          datasets: [{\n            label: \"Requests\",\n            backgroundColor: [\"rgba(245, 73, 120, 0.65)\", \"rgba(175, 146, 234, 0.65)\", \"rgba(152, 244, 244, 0.56)\", \"rgba(152, 244, 152, 0.56)\", \"rgba(244, 152, 152, 0.56)\", \"rgba(244, 244, 152, 0.56)\", \"rgba(244, 152, 244, 0.56)\", \"rgba(152, 198, 244, 0.56)\"],\n            data: SvmsAmount\n          }]\n        }\n      });\n      let message = '';\n\n      if (TotalAmount === null || UsedAmount === null) {\n        message = \"Server Errore cant get the data Please try again later\";\n      }\n\n      if (TotalAmount > UsedAmount + this.props.Amount) {\n        message = `All Clear ${(parseInt(UsedAmount / TotalAmount * 100) - 100) * -1}% Free left`;\n      }\n\n      if (TotalAmount <= UsedAmount + this.props.Amount && UsedAmount + this.props.Amount < TotalAmount * 1.2) {\n        message = `OVER SUBSCRIBE  ${parseInt(UsedAmount / TotalAmount * 100)}% Black line %`;\n      }\n\n      if (UsedAmount + this.props.Amount > TotalAmount * 1.4) {\n        message = `Over SUBSCRIBE ${parseInt(UsedAmount / TotalAmount * 100)}% Red line cant allocate this user Storage request`;\n      }\n\n      this.props.getMessage(message);\n      this.setState({\n        Chartdata: Chartdata,\n        ChartTitle: ''\n      });\n    }\n  }\n\n  Charts() {\n    if (this.state.Chartdata) {\n      return this.state.Chartdata.map((Chartdata, index) => {\n        console.log(Chartdata);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-6\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, this.state.Chartdata[index] ? /*#__PURE__*/React.createElement(Chart, {\n          type: \"Pie\",\n          title: Chartdata,\n          chartData: this.state.Chartdata[index],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 30\n          }\n        }) : /*#__PURE__*/React.createElement(\"alert\", {\n          className: \"alert alert-warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }\n        }, \"Server Error Please try again later\"));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, \"Loading...\")));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","chart","SystemGrafth","constructor","props","state","chartData","n","Requests","SVM","Chartdata","TotalAmmount","message","componentDidMount","nextProps","console","log","TotalAmount","UsedAmount","SVMSArray","SvmsName","SvmsAmount","ChartTitle","get","Aggre","then","res","data","Req","Amount","push","forEach","name","labels","datasets","label","backgroundColor","parseInt","getMessage","setState","Charts","map","index","render"],"mappings":"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","sourcesContent":["import React,{Component, Fragment}from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './chart.component';\r\nimport chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{n:0},\r\n        Requests:[],\r\n        SVM:'',\r\n        Chartdata:'',\r\n        TotalAmmount:'',\r\n        message:'',\r\n       }\r\n    //    this.setdata=this.setdata.bind(this);\r\n}\r\n\r\nasync componentDidMount(nextProps)\r\n{   console.log(this.props +\"||\"+nextProps)\r\n    if(this.props!==nextProps){\r\n    let TotalAmount=0;\r\n    let UsedAmount=0;\r\n    let Chartdata=[];\r\n    let SVMSArray=[];\r\n    let SvmsName=[];\r\n    let SvmsAmount=[];\r\n    let ChartTitle='';\r\n     await axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`)\r\n           .then((res)=>{\r\n               TotalAmount=res.data.Req[0].TotalAmount \r\n               UsedAmount=res.data.Req[0].Amount\r\n               console.log(res.data.Req[0])\r\n            });\r\n     await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`)\r\n        .then((res)=>SVMSArray=res.data.Req);\r\n        SvmsAmount.push(((UsedAmount/TotalAmount)*100));\r\n        SvmsName.push('Free')\r\n        SVMSArray.forEach((SVM)=>{\r\n            console.log(SVM)\r\n            if(SVM.Amount!==0)\r\n            {   \r\n                console.log(SVM)\r\n                SvmsAmount.push((((SVM.Amount/TotalAmount)*100)))\r\n                SvmsName.push(SVM.name)\r\n            }\r\n            }) \r\n                Chartdata.push({\r\n                    chartData:{\r\n                        labels:SvmsName,\r\n                        datasets:[{\r\n                        label:\"Requests\",\r\n                        backgroundColor:[\"rgba(245, 73, 120, 0.65)\",\r\n                                       \"rgba(175, 146, 234, 0.65)\",\r\n                                       \"rgba(152, 244, 244, 0.56)\",\r\n                                       \"rgba(152, 244, 152, 0.56)\",\r\n                                       \"rgba(244, 152, 152, 0.56)\",\r\n                                       \"rgba(244, 244, 152, 0.56)\",\r\n                                       \"rgba(244, 152, 244, 0.56)\",\r\n                                       \"rgba(152, 198, 244, 0.56)\",\r\n                                          ],\r\n                        data:SvmsAmount\r\n                        },\r\n                        ]\r\n                    }\r\n                })\r\n            \r\n            let message='';\r\n            if(TotalAmount===null||UsedAmount===null)\r\n            {\r\n                message=\"Server Errore cant get the data Please try again later\"\r\n            }\r\n            if(TotalAmount>UsedAmount+this.props.Amount)\r\n            {\r\n                message=`All Clear ${((parseInt((UsedAmount/TotalAmount)*100)-100)*-1)}% Free left`\r\n            }\r\n            if(TotalAmount<=UsedAmount+this.props.Amount&&UsedAmount+this.props.Amount<TotalAmount*1.2)\r\n            {\r\n                message=`OVER SUBSCRIBE  ${parseInt((UsedAmount/TotalAmount)*100)}% Black line %`\r\n            }\r\n            if(UsedAmount+this.props.Amount>TotalAmount*1.4)\r\n            {\r\n                message=`Over SUBSCRIBE ${parseInt((UsedAmount/TotalAmount)*100)}% Red line cant allocate this user Storage request`\r\n            }\r\n            this.props.getMessage(message);\r\n            this.setState({Chartdata:Chartdata,ChartTitle:''})\r\n    }   \r\n}\r\n Charts(){\r\n    if(this.state.Chartdata)\r\n    {\r\n    return(\r\n        this.state.Chartdata.map((Chartdata,index)=>{\r\n            console.log(Chartdata)\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.state.Chartdata[index]?\r\n                             <Chart type='Pie' title={Chartdata} chartData={this.state.Chartdata[index]}/>\r\n                        :<alert className=\"alert alert-warning\">Server Error Please try again later</alert>}\r\n                    </div>\r\n                )\r\n        })\r\n    )}\r\n    else{\r\n        return(\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )}\r\n }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}