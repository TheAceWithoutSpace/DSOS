{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class AdminSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      Requests: [],\n      SvmData: []\n    };\n    this.SetData = this.SetData.bind(this);\n  }\n\n  SetChartData(Svm) {\n    let SvmData;\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`).then(res => {\n      SvmData = res.data.Req;\n    });\n    console.log(SvmData);\n    let Responses = [0, 0, 0];\n    SvmData.forEach(Req => {\n      if (Req.status === \"pending\") Responses[0]++;\n      if (Req.status === 'Accepted') Responses[1]++;\n      if (Req.status === \"Decline\") Responses[2]++;\n    });\n    return {\n      chartData: {\n        labels: ['Freespace', 'UsedSpace'],\n        datasets: [{\n          label: \"Requests\",\n          backgroundColor: [\"rgba(200, 0, 120, 0.65)\", \"rgba(60, 0, 200, 0.65)\", \"rgba(255, 12, 60, 0.75)\"],\n          data: Responses\n        }]\n      }\n    };\n  }\n\n  Charts() {\n    return this.props.SVMS.map((currntSvm, index) => {\n      this.ReqForSvm(currntSvm);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        type: \"Pie\",\n        title: currntSvm,\n        chartData: this.SetChartData(currntSvm),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }));\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","AdminSpecs","constructor","props","state","chartData","Requests","SvmData","SetData","bind","SetChartData","Svm","get","then","res","data","Req","console","log","Responses","forEach","status","labels","datasets","label","backgroundColor","Charts","SVMS","map","currntSvm","index","ReqForSvm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAuC,OAAvC;AACC,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAC9CK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAAC,EADA;AAEVC,MAAAA,QAAQ,EAAC,EAFC;AAGVC,MAAAA,OAAO,EAAC;AAHE,KAAX;AAKA,SAAKC,OAAL,GAAa,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAb;AACN;;AACDC,EAAAA,YAAY,CAACC,GAAD,EAAK;AACb,QAAIJ,OAAJ;AACAR,IAAAA,KAAK,CAACa,GAAN,CAAW,qCAAoCD,GAAI,EAAnD,EACCE,IADD,CACOC,GAAD,IAAO;AAACP,MAAAA,OAAO,GAAEO,GAAG,CAACC,IAAJ,CAASC,GAAlB;AAAuB,KADrC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,QAAIY,SAAS,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAd;AACAZ,IAAAA,OAAO,CAACa,OAAR,CAAgBJ,GAAG,IAAI;AACnB,UAAGA,GAAG,CAACK,MAAJ,KAAa,SAAhB,EACIF,SAAS,CAAC,CAAD,CAAT;AACJ,UAAGH,GAAG,CAACK,MAAJ,KAAa,UAAhB,EACIF,SAAS,CAAC,CAAD,CAAT;AACJ,UAAGH,GAAG,CAACK,MAAJ,KAAa,SAAhB,EACIF,SAAS,CAAC,CAAD,CAAT;AACP,KAPD;AAQA,WAAO;AACHd,MAAAA,SAAS,EAAC;AACNiB,QAAAA,MAAM,EAAC,CAAC,WAAD,EAAa,WAAb,CADD;AAENC,QAAAA,QAAQ,EAAC,CAAC;AACTC,UAAAA,KAAK,EAAC,UADG;AAETC,UAAAA,eAAe,EAAC,CAAC,yBAAD,EACC,wBADD,EAEC,yBAFD,CAFP;AAMTV,UAAAA,IAAI,EAACI;AANI,SAAD;AAFH;AADP,KAAP;AAcH;;AACAO,EAAAA,MAAM,GAAE;AACL,WACI,KAAKvB,KAAL,CAAWwB,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAWC,KAAX,KAAmB;AACnC,WAAKC,SAAL,CAAeF,SAAf;AACA,0BACQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAED,SAAzB;AAAmC,QAAA,SAAS,EAAE,KAAKnB,YAAL,CAAkBmB,SAAlB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADR;AAKH,KAPD,CADJ;AAWF;;AAEEG,EAAAA,MAAM,GAAE;AACJf,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKuB,MAAL,EADL,CADJ;AAKH;;AA5D4C","sourcesContent":["import React,{Component, Fragment}from 'react';\r\n import axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class AdminSpecs extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{},\r\n        Requests:[],\r\n        SvmData:[],\r\n       }\r\n       this.SetData=this.SetData.bind(this)\r\n}\r\nSetChartData(Svm){\r\n    let SvmData;\r\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`)\r\n    .then((res)=>{SvmData=(res.data.Req)})\r\n    console.log(SvmData)\r\n    let Responses=[0,0,0]\r\n    SvmData.forEach(Req => {\r\n        if(Req.status===\"pending\")\r\n            Responses[0]++;\r\n        if(Req.status==='Accepted')\r\n            Responses[1]++;\r\n        if(Req.status===\"Decline\")\r\n            Responses[2]++;\r\n    });\r\n    return({\r\n        chartData:{\r\n            labels:['Freespace','UsedSpace'],\r\n            datasets:[{\r\n             label:\"Requests\",\r\n             backgroundColor:[\"rgba(200, 0, 120, 0.65)\",\r\n                              \"rgba(60, 0, 200, 0.65)\",\r\n                              \"rgba(255, 12, 60, 0.75)\",\r\n                              ],\r\n             data:Responses\r\n            },\r\n            ]\r\n        }\r\n    })\r\n}\r\n Charts(){\r\n    return(\r\n        this.props.SVMS.map((currntSvm,index)=>{\r\n            this.ReqForSvm(currntSvm)\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        <Chart type='Pie' title={currntSvm}chartData={this.SetChartData(currntSvm)}/>\r\n                    </div>\r\n                )\r\n        })\r\n    )\r\n\r\n }\r\n\r\n    render(){\r\n        console.log(this.props)\r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}