{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\GrowCalc.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Chart from '../components/chart.component';\nimport AdminCompNav from \"./AdminCompNav\";\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker } from 'react-dates';\n\nclass GrowCalc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LastData: [],\n      CurrentData: [],\n      PredictedData: [],\n      startDate: null,\n      endDate: null,\n      flag: true\n    };\n  }\n\n  async getData() {\n    let LastData = [];\n    let CurrentData = [];\n\n    if (this.state.endDate === null) {\n      let ts = Date.now();\n      let date_ob = new Date(ts);\n      let month = date_ob.getMonth() + 1;\n      let year = date_ob.getFullYear();\n      await axios.get(`MonthDateRoute/Month/${month - 1}.${year}`).then(res => {\n        console.log(res.data.res);\n        LastData = res.data.res;\n      });\n      await axios.get(`MonthDateRoute/Month/${month}.${year}`).then(res => {\n        // console.log(res.data)\n        CurrentData = res.data.res;\n      });\n    } else {\n      let Sd = new Date(this.state.startDate);\n      let CurrentStartDate = Sd.getMonth() + 1 + '-' + Sd.getDate() + '-' + Sd.getFullYear();\n      let LastStartDate = Sd.getMonth() + '-' + Sd.getDate() + '-' + Sd.getFullYear();\n      let Ed = new Date(this.state.endDate);\n      let CurrentEndDate = Ed.getMonth() + 1 + '-' + Ed.getDate() + '-' + Ed.getFullYear();\n      let LastEndDate = Ed.getMonth() + '-' + Ed.getDate() + '-' + Ed.getFullYear();\n      console.log(CurrentStartDate + '||' + CurrentEndDate);\n      console.log(LastStartDate + '||' + LastEndDate);\n      await axios.get(`MonthDateRoute/range/${CurrentStartDate}/${CurrentEndDate}`).then(res => {\n        CurrentData = res.data.res;\n      });\n      await axios.get(`MonthDateRoute/range/${LastStartDate}/${LastStartDate}`).then(res => {\n        console.log(res.data);\n\n        if (res.data.res.length === 0) {\n          console.log('Error cant find The Data');\n        } else {\n          LastData = res.data;\n        }\n      });\n    }\n\n    console.log(LastData);\n    console.log(CurrentData);\n    this.setState({\n      LastData: LastData,\n      CurrentData: CurrentData\n    }); //get last year currecnt month data\n    //and this year month data\n\n    this.CompareData();\n  }\n\n  calcGrowth(Mt, M0) {\n    console.log(Mt + '||' + M0);\n\n    if (Mt === M0) {\n      return 1;\n    } else if (Mt === 0 && M0 !== 0) {\n      return 0;\n    } else if (Mt !== 0 && M0 === 0) {\n      return M0 / Mt + 1;\n    } else {\n      return Mt / M0 + 1;\n    } // let q = M0/Mt;\n    // Math.pow(q,t)\n\n  }\n\n  CompareData() {\n    let CurrntData = this.state.CurrentData;\n    let LastData = this.state.LastData;\n    let PredictedData = [];\n\n    if (this.state.LastData.length !== 0 && this.state.CurrentData.length !== 0) {\n      if (this.state.LastData.length >= this.state.CurrentData.length) {\n        this.state.CurrentData.forEach((CurrentData, index) => {\n          PredictedData.push({\n            StorageTotal: CurrentData.StorageTotalFree * this.calcGrowth(CurrentData.StorageTotalFree, LastData[index].StorageTotal),\n            Date: CurrntData[index].Date,\n            StorageUsegeAmmount: CurrentData.StorageUsegeAmmount * this.calcGrowth(CurrentData.StorageUsegeAmmount, LastData[index].StorageUsegeAmmount),\n            StorageRequests: CurrentData.StorageRequests * this.calcGrowth(CurrentData.StorageRequests, LastData[index].StorageRequests),\n            bugReports: CurrentData.bugReports * this.calcGrowth(CurrentData.bugReports, LastData[index].bugReports),\n            users: CurrentData.users * this.calcGrowth(CurrentData.users, LastData[index].users)\n          });\n        });\n      } else {\n        this.state.LastData.forEach((LastData, index) => {\n          console.log(CurrntData[index]);\n          PredictedData.push({\n            StorageTotalFree: CurrntData[index].StorageTotalFree * this.calcGrowth(CurrntData[index].StorageTotalFree, LastData.StorageTotalFree),\n            Date: CurrntData[index].Date,\n            StorageUsegeAmmount: CurrntData[index].StorageUsegeAmmount * this.calcGrowth(CurrntData[index].StorageUsegeAmmount, LastData.StorageUsegeAmmount),\n            StorageRequests: CurrntData[index].StorageRequests * this.calcGrowth(CurrntData[index].StorageRequests, LastData.StorageRequests),\n            bugReports: CurrntData[index].bugReports * this.calcGrowth(CurrntData[index].bugReports, LastData.bugReports),\n            users: CurrntData[index].users * this.calcGrowth(CurrntData[index].users, LastData.users)\n          });\n        });\n      }\n\n      console.log(PredictedData);\n      this.setState({\n        PredictedData: PredictedData\n      });\n    } else {\n      console.log('Error');\n    }\n  }\n\n  SetDatabugReports() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let bugReports = [];\n      let PredictedbugReports = [];\n      let labels = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        if (new Date(Data.Date).getUTCDay() !== 0) {\n          labels.push(Data.Date.slice(Data.Date.indexOf(\"-\") + 1, Data.Date.lastIndexOf(\"-\")));\n\n          if (Data.bugReports === 0) {\n            PredictedbugReports.push(0);\n          } else {\n            PredictedbugReports.push(Data.bugReports);\n          }\n\n          if (CurrntData[index].bugReports === 0) {\n            bugReports.push(0);\n          } else {\n            bugReports.push(CurrntData[index].bugReports);\n          }\n        }\n      });\n      return {\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"PredictedbugReports\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedbugReports\n          }, {\n            label: \"bugReports\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: bugReports\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataStorageReq() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let StorageRequests = [];\n      let PredictedStorageRequests = [];\n      let labels = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        if (new Date(Data.Date).getUTCDay() !== 0) {\n          labels.push(Data.Date.slice(Data.Date.indexOf(\"-\") + 1, Data.Date.lastIndexOf(\"-\")));\n\n          if (Data.StorageRequests === 0) {\n            PredictedStorageRequests.push(0);\n          } else {\n            PredictedStorageRequests.push(Data.StorageRequests);\n          }\n\n          if (CurrntData[index].StorageRequests === 0) {\n            StorageRequests.push(0);\n          } else {\n            StorageRequests.push(CurrntData[index].StorageRequests);\n          }\n        }\n      });\n      return {\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"PredictedStorageRequests\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedStorageRequests\n          }, {\n            label: \"StorageRequests\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: StorageRequests\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataUsers() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let Users = [];\n      let PredictedUsers = [];\n      let labels = [];\n      let FirestDay = false;\n      this.state.PredictedData.forEach((Data, index) => {\n        if (new Date(Data.Date).getUTCDay() !== 0) {\n          labels.push(Data.Date.slice(Data.Date.indexOf(\"-\") + 1, Data.Date.lastIndexOf(\"-\")));\n\n          if (Data.users === 0) {\n            PredictedUsers.push(0);\n          } else {\n            PredictedUsers.push(Data.users);\n          }\n\n          if (CurrntData[index].users === 0) {\n            Users.push(0);\n          } else {\n            Users.push(CurrntData[index].users);\n          }\n        }\n      });\n      return {\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"PredictedUsers\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedUsers\n          }, {\n            label: \"Users\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: Users\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataAggre() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let Storage = [];\n      let PredictedStorage = [];\n      let labels = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        console.log(Data);\n\n        if (new Date(Data.Date).getUTCDay() !== 0) {\n          labels.push(Data.Date.slice(Data.Date.indexOf(\"-\") + 1, Data.Date.lastIndexOf(\"-\")));\n\n          if (Data.StorageUsegeAmmount === 0 || Data.StorageTotalFree === 0) {\n            PredictedStorage.push(0);\n          } else {\n            PredictedStorage.push(parseInt(Data.StorageUsegeAmmount / Data.StorageTotalFree * 100));\n          }\n\n          if (CurrntData[index].StorageUsegeAmmount === 0 || Data.StorageTotalFree === 0) {\n            Storage.push(0);\n          } else {\n            Storage.push(parseInt(CurrntData[index].StorageUsegeAmmount / Data.StorageTotalFree * 100));\n          }\n        }\n      });\n      return {\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"PredictedAggre\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedStorage\n          }, {\n            label: \"Aggre\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: Storage\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.startDate !== null && this.state.endDate !== null && this.state.flag) {\n      this.getData();\n      this.setState({\n        flag: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cuntiner-fluid \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebarMenu\",\n      className: \"col-md-2 col-lg-2 d-md-block sidebar collapse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AdminCompNav, {\n      User: this.props.User,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      role: \"main\",\n      className: \"col-md-9 ml-sm-auto col-lg-10 px-md-4 bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"16\",\n      height: \"16\",\n      fill: \"currentColor\",\n      className: \"bi bi-clock-history\",\n      viewBox: \"0 0 16 16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    })), \" prognostication\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-toolbar mb-2 mb-md-0 pr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DateRangePicker, {\n      startDate: this.state.startDate // momentPropTypes.momentObj or null,\n      ,\n      startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n      ,\n      endDate: this.state.endDate // momentPropTypes.momentObj or null,\n      ,\n      endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n      ,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => this.setState({\n        startDate,\n        endDate,\n        flag: true\n      }) // PropTypes.func.isRequired,\n      ,\n      focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n      ,\n      isOutsideRange: date => date.isBefore(new Date(2021, 1, 1)) || date.isAfter(new Date()),\n      onFocusChange: focusedInput => this.setState({\n        focusedInput\n      }) // PropTypes.func.isRequired,\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }))), this.state.PredictedData.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'bugReports',\n      chartData: this.SetDatabugReports(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'StorageReq',\n      chartData: this.SetDataStorageReq(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'Users',\n      chartData: this.SetDataUsers(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'Storage',\n      chartData: this.SetDataAggre(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, \"Loading...\")))))));\n  }\n\n}\n\nexport default withRouter(GrowCalc);","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/GrowCalc.js"],"names":["React","Component","axios","withRouter","Chart","AdminCompNav","DateRangePicker","GrowCalc","constructor","props","state","LastData","CurrentData","PredictedData","startDate","endDate","flag","getData","ts","Date","now","date_ob","month","getMonth","year","getFullYear","get","then","res","console","log","data","Sd","CurrentStartDate","getDate","LastStartDate","Ed","CurrentEndDate","LastEndDate","length","setState","CompareData","calcGrowth","Mt","M0","CurrntData","forEach","index","push","StorageTotal","StorageTotalFree","StorageUsegeAmmount","StorageRequests","bugReports","users","SetDatabugReports","PredictedbugReports","labels","Data","getUTCDay","slice","indexOf","lastIndexOf","chartData","datasets","label","fill","backgroundColor","borderColor","SetDataStorageReq","PredictedStorageRequests","SetDataUsers","Users","PredictedUsers","FirestDay","SetDataAggre","Storage","PredictedStorage","parseInt","componentDidMount","componentDidUpdate","render","User","focusedInput","date","isBefore","isAfter"],"mappings":"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","sourcesContent":["import React,{Component}from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter}from 'react-router-dom'\r\nimport Chart from '../components/chart.component';\r\nimport AdminCompNav from \"./AdminCompNav\"\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker} from 'react-dates';\r\n\r\nclass GrowCalc extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LastData:[],\r\n            CurrentData:[],\r\n            PredictedData:[],\r\n            startDate:null,\r\n            endDate:null,\r\n            flag:true,\r\n        }\r\n    }\r\n    async getData(){\r\n        let LastData=[];\r\n        let CurrentData=[];\r\n        if(this.state.endDate===null)\r\n        {\r\n            let ts=Date.now()\r\n            let date_ob = new Date(ts);\r\n            let month = date_ob.getMonth() + 1;\r\n            let year = date_ob.getFullYear();\r\n            await axios.get(`MonthDateRoute/Month/${month-1}.${year}`)\r\n            .then((res)=>{\r\n            console.log(res.data.res)\r\n            LastData=res.data.res;\r\n        })\r\n        await axios.get(`MonthDateRoute/Month/${month}.${year}`)\r\n            .then((res)=>{\r\n                    // console.log(res.data)\r\n                    CurrentData=res.data.res;\r\n                })\r\n        }else{\r\n            let Sd = new Date(this.state.startDate);\r\n            let CurrentStartDate=((Sd.getMonth() + 1)+'-'+Sd.getDate())+'-'+Sd.getFullYear();\r\n            let LastStartDate=((Sd.getMonth())+'-'+Sd.getDate())+'-'+Sd.getFullYear();\r\n            let Ed = new Date(this.state.endDate);\r\n            let CurrentEndDate =((Ed.getMonth()+1)+'-'+Ed.getDate())+'-'+Ed.getFullYear();\r\n            let LastEndDate =((Ed.getMonth())+'-'+Ed.getDate())+'-'+Ed.getFullYear();\r\n            console.log(CurrentStartDate +'||'+CurrentEndDate);\r\n            console.log(LastStartDate+'||'+LastEndDate);\r\n            await axios.get(`MonthDateRoute/range/${CurrentStartDate}/${CurrentEndDate}`)\r\n            .then((res)=>{\r\n                CurrentData=res.data.res;\r\n            })\r\n            await axios.get(`MonthDateRoute/range/${LastStartDate}/${LastStartDate}`)\r\n            .then((res)=>{\r\n                console.log(res.data)\r\n                if(res.data.res.length===0)\r\n                {\r\n                    console.log('Error cant find The Data')\r\n                }else{\r\n                    LastData=res.data;\r\n                }\r\n                \r\n            })\r\n        }\r\n        console.log(LastData);\r\n        console.log(CurrentData);\r\n        this.setState({\r\n            LastData:LastData,\r\n            CurrentData:CurrentData})\r\n        //get last year currecnt month data\r\n        //and this year month data\r\n        this.CompareData();\r\n    }\r\n    calcGrowth(Mt,M0){\r\n        console.log(Mt+'||'+M0);\r\n        if(Mt===M0)\r\n        {\r\n            return(1);\r\n        }else if(Mt===0&&M0!==0)\r\n        {\r\n            return(0);\r\n        }else if(Mt!==0&&M0===0){\r\n            return((M0/Mt)+1)\r\n        }else{\r\n            return((Mt/M0)+1)\r\n        }\r\n        // let q = M0/Mt;\r\n        // Math.pow(q,t)\r\n\r\n    }\r\n    CompareData(){\r\n        let CurrntData=this.state.CurrentData;\r\n        let LastData=this.state.LastData;\r\n        let PredictedData=[];\r\n        if(this.state.LastData.length!==0&&this.state.CurrentData.length!==0)\r\n        {\r\n            if(this.state.LastData.length>=this.state.CurrentData.length)\r\n            {\r\n                this.state.CurrentData.forEach((CurrentData,index)=>{\r\n                    PredictedData.push({\r\n                        StorageTotal:CurrentData.StorageTotalFree*this.calcGrowth(CurrentData.StorageTotalFree,LastData[index].StorageTotal),\r\n                        Date:CurrntData[index].Date,\r\n                        StorageUsegeAmmount:CurrentData.StorageUsegeAmmount*this.calcGrowth(CurrentData.StorageUsegeAmmount,LastData[index].StorageUsegeAmmount),\r\n                        StorageRequests:CurrentData.StorageRequests*this.calcGrowth(CurrentData.StorageRequests,LastData[index].StorageRequests),\r\n                        bugReports:CurrentData.bugReports*this.calcGrowth(CurrentData.bugReports,LastData[index].bugReports),\r\n                        users:CurrentData.users*this.calcGrowth(CurrentData.users,LastData[index].users),\r\n                    })    \r\n                })\r\n            }else{\r\n                this.state.LastData.forEach((LastData,index)=>{\r\n                    console.log(CurrntData[index]);\r\n                    PredictedData.push({\r\n                        StorageTotalFree:CurrntData[index].StorageTotalFree*this.calcGrowth(CurrntData[index].StorageTotalFree,LastData.StorageTotalFree),\r\n                        Date:CurrntData[index].Date,\r\n                        StorageUsegeAmmount:CurrntData[index].StorageUsegeAmmount*this.calcGrowth(CurrntData[index].StorageUsegeAmmount,LastData.StorageUsegeAmmount),\r\n                        StorageRequests:CurrntData[index].StorageRequests*this.calcGrowth(CurrntData[index].StorageRequests,LastData.StorageRequests),\r\n                        bugReports:CurrntData[index].bugReports*this.calcGrowth(CurrntData[index].bugReports,LastData.bugReports),\r\n                        users:CurrntData[index].users*this.calcGrowth(CurrntData[index].users,LastData.users),\r\n                    })   \r\n                })\r\n            }\r\n            console.log(PredictedData)\r\n            this.setState({PredictedData:PredictedData})\r\n        }else{\r\n            console.log('Error')\r\n        }\r\n\r\n    }\r\n     SetDatabugReports(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let bugReports=[];\r\n            let PredictedbugReports=[];\r\n            let labels=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                if(new Date(Data.Date).getUTCDay()!==0)\r\n                {   \r\n                    labels.push(Data.Date.slice(Data.Date.indexOf(\"-\")+1,Data.Date.lastIndexOf(\"-\")));\r\n                    if(Data.bugReports===0){\r\n                        PredictedbugReports.push(0);\r\n                    }else{\r\n                        PredictedbugReports.push(Data.bugReports);\r\n                    }\r\n                    if(CurrntData[index].bugReports===0){\r\n                        bugReports.push(0);\r\n                    }else{bugReports.push(CurrntData[index].bugReports)}\r\n                }\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:labels,\r\n                datasets:[{\r\n                    label:\"PredictedbugReports\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedbugReports\r\n                }, {\r\n                    label:\"bugReports\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:bugReports\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataStorageReq(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let StorageRequests=[];\r\n            let PredictedStorageRequests=[];\r\n            let labels=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                if(new Date(Data.Date).getUTCDay()!==0)\r\n                {   \r\n                    labels.push(Data.Date.slice(Data.Date.indexOf(\"-\")+1,Data.Date.lastIndexOf(\"-\")));\r\n                    if(Data.StorageRequests===0){\r\n                        PredictedStorageRequests.push(0);\r\n                    }else{\r\n                        PredictedStorageRequests.push(Data.StorageRequests);\r\n                    }\r\n                    if(CurrntData[index].StorageRequests===0){\r\n                        StorageRequests.push(0);\r\n                    }else{StorageRequests.push(CurrntData[index].StorageRequests)}\r\n                }\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:labels,\r\n                datasets:[{\r\n                    label:\"PredictedStorageRequests\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedStorageRequests \r\n                }, {\r\n                    label:\"StorageRequests\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:StorageRequests \r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataUsers(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let Users=[];\r\n            let PredictedUsers=[];\r\n            let labels=[];\r\n            let FirestDay=false;\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                if(new Date(Data.Date).getUTCDay()!==0)\r\n                {   \r\n                    labels.push(Data.Date.slice(Data.Date.indexOf(\"-\")+1,Data.Date.lastIndexOf(\"-\")));\r\n                    if(Data.users===0){\r\n                        PredictedUsers.push(0);\r\n                    }else{\r\n                        PredictedUsers.push(Data.users);\r\n                    }\r\n                    if(CurrntData[index].users===0){\r\n                        Users.push(0);\r\n                    }else{Users.push(CurrntData[index].users)}\r\n                }\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:labels,\r\n                datasets:[{\r\n                    label:\"PredictedUsers\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedUsers\r\n                }, {\r\n                    label:\"Users\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:Users\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataAggre(){\r\n        \r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let Storage=[];\r\n            let PredictedStorage=[];\r\n            let labels=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                console.log(Data)\r\n                if(new Date(Data.Date).getUTCDay()!==0)\r\n                {   \r\n                    labels.push(Data.Date.slice(Data.Date.indexOf(\"-\")+1,Data.Date.lastIndexOf(\"-\")));\r\n                    if(Data.StorageUsegeAmmount===0||Data.StorageTotalFree===0){\r\n                        PredictedStorage.push(0);\r\n                    }else{\r\n                        PredictedStorage.push(parseInt((Data.StorageUsegeAmmount/Data.StorageTotalFree)*100));\r\n                    }\r\n                    if(CurrntData[index].StorageUsegeAmmount===0||Data.StorageTotalFree===0){\r\n                        Storage.push(0);\r\n                    }else{Storage.push(parseInt((CurrntData[index].StorageUsegeAmmount/Data.StorageTotalFree)*100))}\r\n                }\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:labels,\r\n                datasets:[{\r\n                    label:\"PredictedAggre\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedStorage\r\n                }, {\r\n                    label:\"Aggre\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:Storage\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.startDate!==null&&this.state.endDate!==null&&this.state.flag)\r\n            {\r\n                this.getData();\r\n                this.setState({flag:false});\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"cuntiner-fluid \">\r\n                <div className=\"row\">\r\n                    <div id=\"sidebarMenu\" className=\"col-md-2 col-lg-2 d-md-block sidebar collapse\">\r\n                        <AdminCompNav User={this.props.User} />\r\n                    </div>\r\n                    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4 bg-white\">\r\n                        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                            <h1 className=\"h2\">\r\n                             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-clock-history\" viewBox=\"0 0 16 16\">\r\n                                    <path fillRule=\"evenodd\" d=\"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\"/>\r\n                                </svg>\r\n                                {\" prognostication\"}\r\n                            </h1>  \r\n                            <div className='btn-toolbar mb-2 mb-md-0 pr-5'>\r\n                                <DateRangePicker\r\n                                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                                startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                                endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                                onDatesChange={({ startDate, endDate}) => this.setState({ startDate, endDate,flag:true})} // PropTypes.func.isRequired,\r\n                                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                                isOutsideRange={date => date.isBefore(new Date(2021, 1, 1)) || date.isAfter(new Date())}\r\n                                onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {this.state.PredictedData.length!==0?\r\n                        <div className=\"row d-flex justify-content-around\">\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'bugReports'} chartData={this.SetDatabugReports()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'StorageReq'} chartData={this.SetDataStorageReq()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'Users'} chartData={this.SetDataUsers()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'Storage'} chartData={this.SetDataAggre()}/>\r\n                            </div>\r\n                        </div>:            \r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(GrowCalc)"]},"metadata":{},"sourceType":"module"}