{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\StorageGraft.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass StorageGraft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Aggre: '',\n      SVMSArray: []\n    };\n  }\n\n  componentDidMount() {\n    let Aggre;\n    let SVMSArray;\n    console.log(this.props);\n    axios.get(`Aggregate/Aggre/${this.props.Aggre}`).then(async res => {\n      Aggre = res.data.res[0];\n      await axios.get(`SvmRoute/SvmByAggreName/${this.props.Aggre}`).then(res => {\n        console.log(res.data.res);\n        SVMSArray = res.data.res;\n      });\n      this.setState({\n        Aggre: Aggre,\n        SVMSArray: SVMSArray\n      });\n    });\n  }\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  getBar() {\n    return this.state.SVMSArray.map(SVM => {\n      let percentage = 0;\n      console.log(SVM);\n\n      if (SVM.total !== 0) {\n        percentage = SVM.total / this.state.Aggre.total * 100;\n        console.log(percentage);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: SVM._id,\n        className: \"progress-bar progress-bar-striped\",\n        role: \"progressbar\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"bottom\",\n        title: `${SVM.Name}--${SVM.total}GB`,\n        style: {\n          width: `${percentage}%`,\n          backgroundColor: `${this.getRandomColor()}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, percentage.toFixed(3), \"%\");\n    });\n  }\n\n  render() {\n    console.log(this.state.Aggre);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.Aggre ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.state.Aggre.used !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.Aggre.total !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-success\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: `Free Space--${this.state.Aggre.leftToAllocate}GB`,\n      style: {\n        width: `${this.state.Aggre.full * -1 + 100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, this.state.Aggre.full * -1 + 100, \"%\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-danger tooltip\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: 'Data Error',\n      style: {\n        width: `${100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, Error, \"%\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-success\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: `Free Space--${this.state.Aggre.leftToAllocate}GB`,\n      style: {\n        width: `${100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }\n    }, 100, \"%\"), this.getBar()) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-grow spinner-grow-sm\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default StorageGraft;","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/StorageGraft.js"],"names":["React","Component","axios","StorageGraft","constructor","props","state","Aggre","SVMSArray","componentDidMount","console","log","get","then","res","data","setState","getRandomColor","letters","color","i","Math","floor","random","getBar","map","SVM","percentage","total","_id","Name","width","backgroundColor","toFixed","render","used","leftToAllocate","full","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,SAAS,EAAC;AAFH,KAAX;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,QAAIF,KAAJ;AACA,QAAIC,SAAJ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACAH,IAAAA,KAAK,CAACU,GAAN,CAAW,mBAAkB,KAAKP,KAAL,CAAWE,KAAM,EAA9C,EACCM,IADD,CACM,MAAMC,GAAN,IAAY;AACdP,MAAAA,KAAK,GAACO,GAAG,CAACC,IAAJ,CAASD,GAAT,CAAa,CAAb,CAAN;AACA,YAAMZ,KAAK,CAACU,GAAN,CAAW,2BAA0B,KAAKP,KAAL,CAAWE,KAAM,EAAtD,EACLM,IADK,CACCC,GAAD,IAAO;AACbJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAJ,CAASD,GAArB;AACAN,QAAAA,SAAS,GAACM,GAAG,CAACC,IAAJ,CAASD,GAAnB;AAEC,OALK,CAAN;AAMA,WAAKE,QAAL,CAAc;AAACT,QAAAA,KAAK,EAACA,KAAP;AAAaC,QAAAA,SAAS,EAACA;AAAvB,OAAd;AACF,KAVF;AAYH;;AACDS,EAAAA,cAAc,GAAG;AACb,QAAIC,OAAO,GAAG,kBAAd;AACA,QAAIC,KAAK,GAAG,GAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,MAAAA,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,WAAOJ,KAAP;AACD;;AACHK,EAAAA,MAAM,GAAE;AACJ,WACI,KAAKlB,KAAL,CAAWE,SAAX,CAAqBiB,GAArB,CAA0BC,GAAD,IAAO;AAC5B,UAAIC,UAAU,GAAC,CAAf;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;;AACA,UAAGA,GAAG,CAACE,KAAJ,KAAY,CAAf,EACI;AACID,QAAAA,UAAU,GAAGD,GAAG,CAACE,KAAJ,GAAU,KAAKtB,KAAL,CAAWC,KAAX,CAAiBqB,KAA5B,GAAmC,GAA/C;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,UAAZ;AACH;;AACL,0BACI;AAAK,QAAA,GAAG,EAAED,GAAG,CAACG,GAAd;AAAmB,QAAA,SAAS,EAAC,mCAA7B;AACA,QAAA,IAAI,EAAC,aADL;AAEA,uBAAY,SAFZ;AAEsB,0BAAe,QAFrC;AAE8C,QAAA,KAAK,EAAG,GAAEH,GAAG,CAACI,IAAK,KAAIJ,GAAG,CAACE,KAAM,IAF/E;AAGA,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAE,GAAEJ,UAAW,GAArB;AAAwBK,UAAAA,eAAe,EAAE,GAAE,KAAKf,cAAL,EAAsB;AAAjE,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKU,UAAU,CAACM,OAAX,CAAmB,CAAnB,CAJL,MADJ;AAQH,KAhBD,CADJ;AAmBH;;AAEDC,EAAAA,MAAM,GAAE;AACJxB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,KAAvB;AACA,wBACI,0CACC,KAAKD,KAAL,CAAWC,KAAX,gBACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWC,KAAX,CAAiB4B,IAAjB,KAAwB,CAAxB,gBACD,0CACK,KAAK7B,KAAL,CAAWC,KAAX,CAAiBqB,KAAjB,KAAyB,CAAzB,gBACG;AAAK,MAAA,SAAS,EAAC,8CAAf;AACI,MAAA,IAAI,EAAC,aADT;AAEI,qBAAY,SAFhB;AAE0B,wBAAe,QAFzC;AAEkD,MAAA,KAAK,EAAG,eAAc,KAAKtB,KAAL,CAAWC,KAAX,CAAiB6B,cAAe,IAFxG;AAGI,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAE,GAAG,KAAKzB,KAAL,CAAWC,KAAX,CAAiB8B,IAAlB,GAAwB,CAAC,CAAzB,GAA2B,GAAI;AAAzC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIU,KAAK/B,KAAL,CAAWC,KAAX,CAAiB8B,IAAlB,GAAwB,CAAC,CAAzB,GAA2B,GAJpC,MADH,gBAOO;AAAK,MAAA,SAAS,EAAC,qDAAf;AACA,MAAA,IAAI,EAAC,aADL;AAEA,qBAAY,SAFZ;AAEsB,wBAAe,QAFrC;AAE8C,MAAA,KAAK,EAAE,YAFrD;AAGA,MAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAAE,GAAE,GAAI;AAAd,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAICO,KAJD,MARZ,CADC,gBAiBA;AAAK,MAAA,SAAS,EAAC,8CAAf;AACQ,MAAA,IAAI,EAAC,aADb;AAEQ,qBAAY,SAFpB;AAE8B,wBAAe,QAF7C;AAEsD,MAAA,KAAK,EAAG,eAAc,KAAKhC,KAAL,CAAWC,KAAX,CAAiB6B,cAAe,IAF5G;AAGQ,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAE,GAAE,GAAI;AAAd,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIY,GAJZ,MAlBL,EAyBK,KAAKP,MAAL,EAzBL,CADH,gBA6BG;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CA9BJ,CADJ;AAqCH;;AA9F+B;;AAiGpC,eAAerB,YAAf","sourcesContent":["import React, { Component} from'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass StorageGraft extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            Aggre:'',\r\n            SVMSArray:[],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let Aggre;\r\n        let SVMSArray;\r\n        console.log(this.props)\r\n        axios.get(`Aggregate/Aggre/${this.props.Aggre}`)\r\n        .then(async(res)=>{\r\n            Aggre=res.data.res[0];\r\n            await axios.get(`SvmRoute/SvmByAggreName/${this.props.Aggre}`)\r\n            .then((res)=>{\r\n            console.log(res.data.res)\r\n            SVMSArray=res.data.res\r\n\r\n            });\r\n            this.setState({Aggre:Aggre,SVMSArray:SVMSArray})\r\n         });\r\n    \r\n    }\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      }\r\n    getBar(){\r\n        return(\r\n            this.state.SVMSArray.map((SVM)=>{\r\n                let percentage=0;\r\n                console.log(SVM)\r\n                if(SVM.total!==0)\r\n                    {\r\n                        percentage=((SVM.total/this.state.Aggre.total)*100);\r\n                        console.log(percentage)\r\n                    }\r\n                return(\r\n                    <div key={SVM._id} className=\"progress-bar progress-bar-striped\"\r\n                    role=\"progressbar\"\r\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={`${SVM.Name}--${SVM.total}GB`}\r\n                    style={{width:`${percentage}%`,backgroundColor:`${this.getRandomColor()}`}}>\r\n                        {percentage.toFixed(3)}%\r\n                </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.Aggre)\r\n        return(\r\n            <>\r\n            {this.state.Aggre?\r\n                <div className=\"progress\">\r\n                    {this.state.Aggre.used!==0?\r\n                    <>\r\n                        {this.state.Aggre.total!==0?\r\n                            <div className=\"progress-bar progress-bar-striped bg-success\"\r\n                                role=\"progressbar\"\r\n                                data-toggle=\"tooltip\" data-placement=\"bottom\" title={`Free Space--${this.state.Aggre.leftToAllocate}GB`}\r\n                                style={{width:`${(this.state.Aggre.full)*-1+100}%`}}>\r\n                                    {(this.state.Aggre.full)*-1+100}%\r\n                            </div>\r\n                        :       <div className=\"progress-bar progress-bar-striped bg-danger tooltip\"\r\n                                role=\"progressbar\"\r\n                                data-toggle=\"tooltip\" data-placement=\"bottom\" title={'Data Error'}\r\n                                style={{width:`${100}%`}}>\r\n                                {Error}%\r\n                                </div>\r\n                            }\r\n                    </>\r\n                    :<div className=\"progress-bar progress-bar-striped bg-success\"\r\n                             role=\"progressbar\"\r\n                             data-toggle=\"tooltip\" data-placement=\"bottom\" title={`Free Space--${this.state.Aggre.leftToAllocate}GB`}\r\n                             style={{width:`${100}%`}}>\r\n                                {100}%\r\n                        </div>\r\n                    }\r\n                    {this.getBar()}\r\n                </div>\r\n                :\r\n                <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                }\r\n            </>\r\n            );\r\n    }\r\n\r\n}\r\nexport default StorageGraft"]},"metadata":{},"sourceType":"module"}