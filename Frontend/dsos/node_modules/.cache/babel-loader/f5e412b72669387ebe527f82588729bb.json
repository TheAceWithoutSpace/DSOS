{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      Requests: [],\n      SvmData: []\n    };\n  }\n\n  async SetData(currntSvm) {\n    let Responses = [3, 1];\n    console.log(currntSvm);\n    let temp = await this.SetChartData(currntSvm);\n    console.log(temp);\n    return {\n      chartData: {\n        labels: ['Free', 'Used'],\n        datasets: [{\n          label: \"Requests\",\n          backgroundColor: [\"rgba(175, 146, 234, 0.65)\", \"rgba(245, 73, 120, 0.65)\"],\n          data: [3, 2]\n        }]\n      }\n    };\n  }\n\n  SetChartData(Svm) {\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`).then(res => {\n      let Amount = 0;\n      res.data.Req.forEach(Req => {\n        Amount += Req.Amount;\n      });\n      let Max = 1000 - Amount;\n      let Responses = [Amount, Max];\n      console.log(Responses);\n      return Responses;\n    });\n  }\n\n  Charts() {\n    return this.props.SVMS.map((currntSvm, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, this.SetData(currntSvm));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","SystemGrafth","constructor","props","state","chartData","Requests","SvmData","SetData","currntSvm","Responses","console","log","temp","SetChartData","labels","datasets","label","backgroundColor","data","Svm","get","then","res","Amount","Req","forEach","Max","Charts","SVMS","map","index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAuC,OAAvC;AACC,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAoC;AAChDK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAAC,EADA;AAEVC,MAAAA,QAAQ,EAAC,EAFC;AAGVC,MAAAA,OAAO,EAAC;AAHE,KAAX;AAKN;;AACD,QAAMC,OAAN,CAAcC,SAAd,EAAwB;AACpB,QAAIC,SAAS,GAAC,CAAC,CAAD,EAAG,CAAH,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAII,IAAI,GAAC,MAAM,KAAKC,YAAL,CAAkBL,SAAlB,CAAf;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAGA,WAAO;AACHR,MAAAA,SAAS,EAAC;AACNU,QAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,MAAR,CADD;AAENC,QAAAA,QAAQ,EAAC,CAAC;AACTC,UAAAA,KAAK,EAAC,UADG;AAETC,UAAAA,eAAe,EAAC,CAAC,2BAAD,EACC,0BADD,CAFP;AAKTC,UAAAA,IAAI,EAAC,CAAC,CAAD,EAAG,CAAH;AALI,SAAD;AAFH;AADP,KAAP;AAaF;;AACDL,EAAAA,YAAY,CAACM,GAAD,EAAK;AACdrB,IAAAA,KAAK,CAACsB,GAAN,CAAW,qCAAoCD,GAAI,EAAnD,EACCE,IADD,CACOC,GAAD,IAAO;AACT,UAAIC,MAAM,GAAC,CAAX;AACAD,MAAAA,GAAG,CAACJ,IAAJ,CAASM,GAAT,CAAaC,OAAb,CAAqBD,GAAG,IAAI;AACxBD,QAAAA,MAAM,IAAEC,GAAG,CAACD,MAAZ;AACH,OAFD;AAGA,UAAIG,GAAG,GAAE,OAAMH,MAAf;AACA,UAAId,SAAS,GAAC,CAACc,MAAD,EAAQG,GAAR,CAAd;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aAAOA,SAAP;AACH,KAVD;AAYH;;AACAkB,EAAAA,MAAM,GAAE;AACL,WACI,KAAKzB,KAAL,CAAW0B,IAAX,CAAgBC,GAAhB,CAAoB,CAACrB,SAAD,EAAWsB,KAAX,KAAmB;AACnC,0BACQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKvB,OAAL,CAAaC,SAAb,CADL,CADR;AAMH,KAPD,CADJ;AAWF;;AAEEuB,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,MAAL,EADL,CADJ;AAKH;;AAhE8C","sourcesContent":["import React,{Component, Fragment}from 'react';\r\n import axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{},\r\n        Requests:[],\r\n        SvmData:[],\r\n       }\r\n}\r\nasync SetData(currntSvm){ \r\n    let Responses=[3,1];\r\n    console.log(currntSvm)\r\n    let temp=await this.SetChartData(currntSvm);\r\n    console.log(temp)\r\n    \r\n\r\n    return({\r\n        chartData:{\r\n            labels:['Free','Used'],\r\n            datasets:[{\r\n             label:\"Requests\",\r\n             backgroundColor:[\"rgba(175, 146, 234, 0.65)\",\r\n                              \"rgba(245, 73, 120, 0.65)\",\r\n                              ],\r\n             data:[3,2]\r\n            },\r\n            ]\r\n        }\r\n    })\r\n }\r\n SetChartData(Svm){\r\n    axios.get(`http://localhost:3000/Request/Svm/${Svm}`)\r\n    .then((res)=>{ \r\n        let Amount=0;\r\n        res.data.Req.forEach(Req => {\r\n            Amount+=Req.Amount;\r\n        });\r\n        let Max=(1000 -Amount);\r\n        let Responses=[Amount,Max]\r\n        console.log(Responses)\r\n        return Responses\r\n    })\r\n\r\n}\r\n Charts(){\r\n    return(\r\n        this.props.SVMS.map((currntSvm,index)=>{\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.SetData(currntSvm)}\r\n                        {/* <Chart type='Pie' title={currntSvm} chartData={this.SetData()}/> */}\r\n                    </div>\r\n                )\r\n        })\r\n    )\r\n\r\n }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}