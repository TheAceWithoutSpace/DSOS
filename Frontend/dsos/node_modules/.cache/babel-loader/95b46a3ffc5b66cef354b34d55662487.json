{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\Dsos\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\Pages\\\\RequestVolume.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Progress from '../components/Progress';\nimport Message from '../components/Message';\nimport { withRouter } from 'react-router-dom';\n\nclass createRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onsubmit = async e => {\n      e.preventDefault();\n      this.onclicked();\n      const FileID = await this.upload(this.state.File);\n      console.log(FileID); // const User=JSON.parse(localStorage.getItem('user'));\n\n      const Request = {\n        userID: JSON.parse(localStorage.getItem('user'))._id,\n        username: JSON.parse(localStorage.getItem('user')).U,\n        email: JSON.parse(localStorage.getItem('user')).E,\n        Name: {\n          C: this.state.Cluster,\n          A: this.state.Aggregate,\n          S: this.state.Svm,\n          V: this.state.volume\n        },\n        Amount: this.state.Amount,\n        File: FileID,\n        Location: this.state.location,\n        status: 'pending',\n        type: 'volume'\n      };\n      console.log(Request);\n      let ts = Date.now();\n      let date_ob = new Date(ts);\n      let day = date_ob.getDate();\n      let month = date_ob.getMonth() + 1;\n      let year = date_ob.getFullYear();\n      await axios.post('Request/add', Request).then(async res => {\n        await axios.post(`MonthDateRoute/StorageRequests/${month}-${day}-${year}`);\n        this.setState({\n          message: \"Request send\"\n        });\n        this.props.history.push(\"/Home\");\n      }).catch(err => {\n        this.setState({\n          message: \"Error\" + err\n        });\n      });\n    };\n\n    this.upload = async e => {\n      // e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', e);\n\n      if (e) {\n        try {\n          const res = await axios.post('File/upload', formData, {\n            headers: {\n              'content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: ProgressEvent => {\n              this.setState({\n                uploadPercentage: parseInt(ProgressEvent.loaded / ProgressEvent.total * 100)\n              });\n            }\n          });\n          return res.data.file.filename;\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.onChangeVolume = this.onChangeVolume.bind(this);\n    this.setSelectedFile = this.setSelectedFile.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onclicked = this.onclicked.bind(this);\n    this.handleChangeSvm = this.handleChangeSvm.bind(this);\n    this.Svmlist = this.Svmlist.bind(this);\n    this.onsubmit = this.onsubmit.bind(this);\n    this.state = {\n      volume: '',\n      File: '',\n      Amount: 0,\n      uploadPercentage: 0,\n      message: '',\n      Svm: '',\n      Cluster: '',\n      Aggregate: '',\n      location: '',\n      SvmArray: '',\n      Hail: '',\n      flag: false,\n      NewFlag: false\n    };\n  }\n\n  componentDidMount() {\n    //get all the svms\n    const User = JSON.parse(localStorage.getItem(\"user\"));\n    axios.get('SvmRoute/').then(res => {\n      console.log(res.data);\n\n      if (res.data.err === null) {\n        this.setState({\n          SvmArray: res.data.res,\n          Hail: User.Hail\n        });\n      } else {\n        console.log(res.data.err);\n      }\n    });\n  } // handeling form fields\n\n\n  setSelectedFile(e) {\n    this.setState({\n      File: e.target.files[0]\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      Amount: e.target.value\n    });\n  }\n\n  onChangeVolume(e) {\n    this.setState({\n      volume: e.target.value\n    });\n  }\n\n  handleChangeSvm(e) {\n    this.state.SvmArray.forEach(svm => {\n      if (svm.Name === e.target.value) {\n        this.setState({\n          Svm: svm.Name,\n          Cluster: svm.Cluster,\n          Aggregate: svm.aggregate,\n          Location: 'svm.Region'\n        });\n      }\n    });\n  }\n\n  onclicked(e) {\n    this.setState({\n      flag: true\n    });\n  } // submiting the form and creating new volume request in the db\n\n\n  Svmlist() {\n    if (this.state.SvmArray) {\n      return this.state.SvmArray.map(CurrentSvm => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: CurrentSvm._id,\n          value: CurrentSvm.Name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, `${CurrentSvm.Name} Type: ${CurrentSvm.aggregate}`);\n      });\n    } else {\n      return null;\n    }\n  } // rendering the formn\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, this.state.message ? /*#__PURE__*/React.createElement(Message, {\n      msg: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center display-4 my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Volume Request\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onsubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, \"VolumeName:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.volume,\n      onChange: this.onChangeVolume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Svm Name:\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      required: true,\n      value: this.state.Svm,\n      onChange: this.handleChangeSvm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      defaultValue: true,\n      value: '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, `This is the recomended choise : ${this.state.Hail}`), this.Svmlist())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Amount in (GB):\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      required: true,\n      min: \"0\",\n      className: \"form-control\",\n      value: this.state.Amount,\n      onChange: this.onChangeAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"File of Founding\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-file mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"custom-file-input\",\n      id: \"customFile\",\n      required: true,\n      onChange: this.setSelectedFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-label\",\n      htmlFor: \"customFile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, this.state.File.name)), /*#__PURE__*/React.createElement(Progress, {\n      percentage: this.state.uploadPercentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }))), this.state.flag === false ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Send Request\")) : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-primary btn-block\",\n      type: \"button\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }), \"Loading...\")))));\n  }\n\n}\n\nexport default withRouter(createRequest);","map":{"version":3,"sources":["C:/Users/ben78/Desktop/Dsos/DSOS/Frontend/dsos/src/Pages/RequestVolume.js"],"names":["React","Component","axios","Progress","Message","withRouter","createRequest","constructor","props","onsubmit","e","preventDefault","onclicked","FileID","upload","state","File","console","log","Request","userID","JSON","parse","localStorage","getItem","_id","username","U","email","E","Name","C","Cluster","A","Aggregate","S","Svm","V","volume","Amount","Location","location","status","type","ts","Date","now","date_ob","day","getDate","month","getMonth","year","getFullYear","post","then","res","setState","message","history","push","catch","err","formData","FormData","append","headers","onUploadProgress","ProgressEvent","uploadPercentage","parseInt","loaded","total","data","file","filename","onChangeVolume","bind","setSelectedFile","onChangeAmount","handleChangeSvm","Svmlist","SvmArray","Hail","flag","NewFlag","componentDidMount","User","get","target","files","value","forEach","svm","aggregate","map","CurrentSvm","render","name"],"mappings":"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","sourcesContent":["import React,{Component}from 'react';\r\nimport axios from 'axios';\r\nimport Progress from '../components/Progress'\r\nimport Message from '../components/Message'\r\nimport {withRouter}from 'react-router-dom'\r\n\r\n\r\nclass createRequest extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeVolume=this.onChangeVolume.bind(this);\r\n        this.setSelectedFile=this.setSelectedFile.bind(this);\r\n        this.onChangeAmount=this.onChangeAmount.bind(this);\r\n        this.onclicked=this.onclicked.bind(this);\r\n        this.handleChangeSvm=this.handleChangeSvm.bind(this);\r\n        this.Svmlist=this.Svmlist.bind(this);\r\n        this.onsubmit=this.onsubmit.bind(this);\r\n        \r\n        this.state={\r\n            volume:'',\r\n            File:'',\r\n            Amount:0,\r\n            uploadPercentage:0,\r\n            message:'',\r\n            Svm:'',\r\n            Cluster:'',\r\n            Aggregate:'',\r\n            location:'',\r\n            SvmArray:'',\r\n            Hail:'',\r\n            flag:false,\r\n            NewFlag:false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        //get all the svms\r\n        const User=JSON.parse(localStorage.getItem(\"user\"));\r\n        axios.get('SvmRoute/')\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            if(res.data.err===null){\r\n                this.setState({SvmArray:res.data.res,Hail:User.Hail})\r\n            }else{\r\n                console.log(res.data.err);\r\n            }\r\n        })\r\n    }\r\n    // handeling form fields\r\n    setSelectedFile(e){\r\n        this.setState({\r\n            File:e.target.files[0]\r\n        });\r\n    }\r\n    onChangeAmount(e){\r\n        this.setState({\r\n            Amount:e.target.value\r\n        })\r\n    }\r\n    onChangeVolume(e){\r\n        this.setState({\r\n            volume:e.target.value\r\n        });\r\n    }\r\n    handleChangeSvm(e){\r\n        this.state.SvmArray.forEach((svm) => {\r\n            if(svm.Name===e.target.value)\r\n            {\r\n                this.setState({\r\n                    Svm:svm.Name,\r\n                    Cluster:svm.Cluster,\r\n                    Aggregate:svm.aggregate,\r\n                    Location:'svm.Region'\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n    onclicked(e){\r\n        this.setState({flag:true})\r\n    }\r\n    // submiting the form and creating new volume request in the db\r\n    onsubmit=async(e)=>{\r\n        e.preventDefault();\r\n        this.onclicked();\r\n        const FileID=await this.upload(this.state.File);\r\n        console.log(FileID);\r\n        // const User=JSON.parse(localStorage.getItem('user'));\r\n        const Request={\r\n            userID:JSON.parse(localStorage.getItem('user'))._id,\r\n            username:JSON.parse(localStorage.getItem('user')).U,\r\n            email:JSON.parse(localStorage.getItem('user')).E,\r\n            Name:{C:this.state.Cluster,A:this.state.Aggregate,S:this.state.Svm,V:this.state.volume},\r\n            Amount:this.state.Amount,\r\n            File:FileID,\r\n            Location:this.state.location,\r\n            status:'pending',\r\n            type:'volume'\r\n        }\r\n\r\n        console.log(Request);\r\n        let ts=Date.now()\r\n        let date_ob = new Date(ts);\r\n        let day= date_ob.getDate();\r\n        let month = date_ob.getMonth() + 1;\r\n        let year = date_ob.getFullYear();\r\n        await axios.post('Request/add',Request)\r\n            .then(async(res)=>{\r\n                await axios.post(`MonthDateRoute/StorageRequests/${month}-${day}-${year}`)\r\n                this.setState({message:\"Request send\"})\r\n                this.props.history.push(\"/Home\");\r\n            })\r\n            .catch(err=>{this.setState({message:\"Error\"+err})});\r\n    }\r\n    upload= async e=>{\r\n        // e.preventDefault();\r\n        const formData=new FormData();\r\n        formData.append('file',e);\r\n        if(e)\r\n        {\r\n            try{\r\n                  const res=await axios.post('File/upload',formData,{\r\n                    headers:{\r\n                      'content-Type':'multipart/form-data'\r\n                    },\r\n                    onUploadProgress:ProgressEvent=>{\r\n                        this.setState({uploadPercentage:(parseInt((ProgressEvent.loaded/ProgressEvent.total)*100))});\r\n                    }\r\n                  });\r\n                  return(res.data.file.filename);\r\n          }catch(err){\r\n            console.log (err)\r\n          }\r\n        }\r\n    }\r\n\r\n    Svmlist(){\r\n        if(this.state.SvmArray)\r\n        {\r\n            return(\r\n                this.state.SvmArray.map((CurrentSvm)=>{\r\n                    return(\r\n                        <option key={CurrentSvm._id} value={CurrentSvm.Name}>{`${CurrentSvm.Name} Type: ${CurrentSvm.aggregate}`}</option>\r\n                    )}\r\n                ))\r\n        }\r\n        else{return null}\r\n    }\r\n    \r\n    // rendering the formn\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                {this.state.message?<Message msg={this.state.message}/>:''}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 m-auto\">\r\n                    <h3 className=\"text-center display-4 my-4\">Volume Request</h3>\r\n            <form onSubmit={this.onsubmit}>\r\n            <div className=\"form-group\">\r\n                    <label>VolumeName:</label>\r\n                    <input type='text' required\r\n                    className=\"form-control\" value={this.state.volume}\r\n                    onChange={this.onChangeVolume}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Svm Name:</label>\r\n                    <select className=\"custom-select\" required value={this.state.Svm} onChange={this.handleChangeSvm}>\r\n                        <option disabled defaultValue value={''}>{`This is the recomended choise : ${this.state.Hail}`}</option>\r\n                        {this.Svmlist()}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group  mb-3\">\r\n                    <label>Amount in (GB):</label>\r\n                    <input type='number' required min=\"0\"\r\n                    className=\"form-control\" value={this.state.Amount}\r\n                    onChange={this.onChangeAmount}/>\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                <div>\r\n                    <label>File of Founding</label>\r\n                    <div className='custom-file mb-4'>\r\n                        <input type=\"file\" className='custom-file-input' id='customFile' required onChange={this.setSelectedFile}/>\r\n                        <label className='custom-file-label' htmlFor='customFile'>\r\n                        {this.state.File.name}\r\n                        </label>\r\n                    </div>\r\n                        <Progress percentage={this.state.uploadPercentage}/>\r\n                    </div>\r\n                </div>\r\n                {this.state.flag===false?\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">Send Request</button>     \r\n                </div>\r\n                :\r\n                <button className=\"btn btn-outline-primary btn-block\" type=\"button\" disabled>\r\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    Loading...\r\n                </button>\r\n                }\r\n            </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(createRequest) \r\n\r\n"]},"metadata":{},"sourceType":"module"}