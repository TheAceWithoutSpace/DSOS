{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        n: 0\n      },\n      Requests: [],\n      SVM: '',\n      TotalAmmount: '',\n      message: ''\n    }; //    this.setdata=this.setdata.bind(this);\n  }\n\n  async componentDidMount(nextProps) {\n    console.log(this.props + \"||\" + nextProps);\n\n    if (this.props !== nextProps) {\n      let TotalAmount = 0;\n      let UsedAmount = 0;\n      let SVMS = [];\n      let SVMSArray = [];\n      axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`).then(res => {\n        TotalAmount = res.data.Req[0].TotalAmount;\n        UsedAmount = res.data.Req[0].Amount;\n      });\n      await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`).then(res => SVMSArray = res.data.Req);\n      SVMSArray.forEach(SVM => {\n        console.log(SVM);\n      });\n      SVMS.push({\n        chartData: {\n          labels: ['Free', 'Used'],\n          datasets: [{\n            label: \"Requests\",\n            backgroundColor: [\"rgba(245, 73, 120, 0.65)\", \"rgba(175, 146, 234, 0.65)\"],\n            data: [TotalAmount - UsedAmount, UsedAmount]\n          }]\n        }\n      });\n      let message = '';\n      console.log(parseInt(35000 / TotalAmount * 100));\n\n      if (TotalAmount > UsedAmount + this.props.Amount) {\n        message = `All Clear ${(parseInt(UsedAmount / TotalAmount * 100) - 100) * -1}% left`;\n      }\n\n      if (TotalAmount <= UsedAmount + this.props.Amount && UsedAmount + this.props.Amount < TotalAmount * 1.2) {\n        message = `OVER SUBSCRIBE  ${parseInt(UsedAmount / TotalAmount * 100)}% Black line %`;\n      }\n\n      if (UsedAmount + this.props.Amount > TotalAmount * 1.4) {\n        message = `Over SUBSCRIBE ${parseInt(UsedAmount / TotalAmount * 100)}% Red line cant allocate this user Storage request`;\n      }\n\n      this.setState({\n        SVM: SVMS,\n        message: message\n      });\n    }\n  }\n\n  Charts() {\n    console.log(this.state.SVM);\n\n    if (this.state.SVM) {\n      return this.state.SVM.map((currntSvm, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-6\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }\n        }, this.state.SVM[index] ? /*#__PURE__*/React.createElement(Chart, {\n          type: \"Pie\",\n          title: currntSvm,\n          chartData: this.state.SVM[index],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }\n        }) : null);\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"Loading...\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","SystemGrafth","constructor","props","state","chartData","n","Requests","SVM","TotalAmmount","message","componentDidMount","nextProps","console","log","TotalAmount","UsedAmount","SVMS","SVMSArray","get","Aggre","then","res","data","Req","Amount","forEach","push","labels","datasets","label","backgroundColor","parseInt","setState","Charts","map","currntSvm","index","render"],"mappings":"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","sourcesContent":["import React,{Component, Fragment}from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{n:0},\r\n        Requests:[],\r\n        SVM:'',\r\n        TotalAmmount:'',\r\n        message:'',\r\n       }\r\n    //    this.setdata=this.setdata.bind(this);\r\n}\r\n\r\nasync componentDidMount(nextProps)\r\n{   console.log(this.props +\"||\"+nextProps)\r\n    if(this.props!==nextProps){\r\n    let TotalAmount=0;\r\n    let UsedAmount=0;\r\n    let SVMS=[];\r\n    let SVMSArray=[];\r\n     axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`)\r\n        .then((res)=>{TotalAmount=res.data.Req[0].TotalAmount \r\n            UsedAmount=res.data.Req[0].Amount});\r\n     await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`)\r\n        .then((res)=>SVMSArray=res.data.Req);\r\n        SVMSArray.forEach((SVM)=>{\r\n                console.log(SVM)\r\n            })         \r\n            SVMS.push({\r\n                chartData:{\r\n                    labels:['Free','Used'],\r\n                    datasets:[{\r\n                     label:\"Requests\",\r\n                     backgroundColor:[\"rgba(245, 73, 120, 0.65)\",\r\n                                      \"rgba(175, 146, 234, 0.65)\",\r\n                                      ],\r\n                     data:[(TotalAmount-UsedAmount),UsedAmount]\r\n                    },\r\n                    ]\r\n                }\r\n            })\r\n            let message='';\r\n            console.log(parseInt((35000/TotalAmount)*100))\r\n            if(TotalAmount>UsedAmount+this.props.Amount)\r\n            {\r\n                message=`All Clear ${((parseInt((UsedAmount/TotalAmount)*100)-100)*-1)}% left`\r\n            }\r\n            if(TotalAmount<=UsedAmount+this.props.Amount&&UsedAmount+this.props.Amount<TotalAmount*1.2)\r\n            {\r\n                message=`OVER SUBSCRIBE  ${parseInt((UsedAmount/TotalAmount)*100)}% Black line %`\r\n            }\r\n            if(UsedAmount+this.props.Amount>TotalAmount*1.4)\r\n            {\r\n                message=`Over SUBSCRIBE ${parseInt((UsedAmount/TotalAmount)*100)}% Red line cant allocate this user Storage request`\r\n            }\r\n            this.setState({SVM:SVMS,message:message})\r\n    }   \r\n}\r\n Charts(){\r\n     console.log(this.state.SVM)\r\n    if(this.state.SVM)\r\n    {\r\n    return(\r\n        this.state.SVM.map((currntSvm,index)=>{\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.state.SVM[index]?\r\n                             <Chart type='Pie' title={currntSvm} chartData={this.state.SVM[index]}/>\r\n                        :null}\r\n                    </div>\r\n                )\r\n        })\r\n    )}\r\n    else{return(<p>Loading...</p>)}\r\n }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}