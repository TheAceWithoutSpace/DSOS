{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\Dsos\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\GrowCalc.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Chart from '../components/chart.component';\nimport AdminCompNav from \"./AdminCompNav\";\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker } from 'react-dates'; // calc the grow of the the servies \n\nclass GrowCalc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LastData: [],\n      CurrentData: [],\n      labels: [],\n      PredictedData: [],\n      startDate: null,\n      endDate: null,\n      flag: true\n    };\n  }\n\n  async getData() {\n    let LastData = [];\n    let CurrentData = [];\n    let startIndex;\n    let EndIndex;\n\n    if (this.state.endDate === null) {\n      let ts = Date.now();\n      let date_ob = new Date(ts);\n      let month = date_ob.getMonth() + 1;\n      let year = date_ob.getFullYear(); // get last month data\n\n      await axios.get(`MonthDateRoute/Month/${month - 1}-${year}`).then(res => {\n        console.log(res.data.res);\n        LastData = res.data.res[0].Data;\n      }); // get current month data\n\n      await axios.get(`MonthDateRoute/Month/${month}-${year}`).then(res => {\n        console.log(res.data);\n        CurrentData = res.data.res[0].Data;\n      });\n    } else {\n      // calc the grow by a range of dates and commpare to the current data\n      let Sd = new Date(this.state.startDate);\n      startIndex = Sd.getDate();\n      EndIndex = Ed.getDate();\n      let CurrentStartDate = Sd.getMonth() + 1 + \"-\" + Sd.getFullYear();\n      let LastStartDate = Sd.getMonth() + \"-\" + Sd.getFullYear();\n      let Ed = new Date(this.state.endDate); //end Date\n\n      let CurrentEndDate = Ed.getMonth() + 1 + '-' + Ed.getFullYear();\n      let LastEndDate = Ed.getMonth() + \"-\" + Ed.getFullYear();\n      console.log(CurrentStartDate + '||' + CurrentEndDate);\n      console.log(LastStartDate + '||' + LastEndDate);\n      await axios.get(`MonthDateRoute/range/${CurrentStartDate}/${CurrentEndDate}`).then(res => {\n        CurrentData = res.data.res[0].Data;\n      });\n      await axios.get(`MonthDateRoute/range/${LastStartDate}/${LastStartDate}`).then(res => {\n        console.log(res.data);\n\n        if (res.data.res.length === 0) {\n          console.log('Error cant find The Data');\n        } else {\n          LastData = res.data.res[0].Data;\n        }\n      });\n    }\n\n    console.log(LastData);\n    console.log(CurrentData);\n    this.setState({\n      LastData: LastData,\n      CurrentData: CurrentData,\n      StartIndex: startIndex,\n      EndIndex: EndIndex\n    }); //get last year currecnt month data\n    //and this year month data\n\n    this.CompareData();\n  }\n\n  calcGrowth(Mt, M0) {\n    if (Mt === M0) {\n      return 1;\n    } else if (Mt === 0 && M0 !== 0) {\n      return 0;\n    } else if (Mt !== 0 && M0 === 0) {\n      return M0 / Mt + 1;\n    } else {\n      return Mt / M0 + 1;\n    } // let q = M0/Mt;\n    // Math.pow(q,t)\n\n  } //compare the Data\n\n\n  CompareData() {\n    let CurrntData = this.state.CurrentData;\n    let LastData = this.state.LastData;\n    let PredictedData = [];\n    let labels = [];\n\n    if (this.state.LastData.length !== 0 && this.state.CurrentData.length !== 0) {\n      if (this.state.LastData.length >= this.state.CurrentData.length) {\n        this.state.CurrentData.forEach((CurrentData, index) => {\n          labels.push(CurrentData.Date);\n          PredictedData.push({\n            StorageTotalFree: CurrentData.StorageTotalFree * this.calcGrowth(CurrentData.StorageTotalFree, LastData[index].StorageTotalFree),\n            Date: CurrntData[index].Date,\n            StorageUsegeAmmount: CurrentData.StorageUsegeAmmount * this.calcGrowth(CurrentData.StorageUsegeAmmount, LastData[index].StorageUsegeAmmount),\n            StorageRequests: CurrentData.StorageRequests * this.calcGrowth(CurrentData.StorageRequests, LastData[index].StorageRequests),\n            bugReports: CurrentData.bugReports * this.calcGrowth(CurrentData.bugReports, LastData[index].bugReports),\n            users: CurrentData.users * this.calcGrowth(CurrentData.users, LastData[index].users)\n          });\n        });\n      } else {\n        this.state.LastData.forEach((LastData, index) => {\n          console.log(CurrntData[index]);\n          labels.push(CurrntData[index].Date);\n          PredictedData.push({\n            StorageTotalFree: CurrntData[index].StorageTotalFree * this.calcGrowth(CurrntData[index].StorageTotalFree, LastData.StorageTotalFree),\n            Date: CurrntData[index].Date,\n            StorageUsegeAmmount: CurrntData[index].StorageUsegeAmmount * this.calcGrowth(CurrntData[index].StorageUsegeAmmount, LastData.StorageUsegeAmmount),\n            StorageRequests: CurrntData[index].StorageRequests * this.calcGrowth(CurrntData[index].StorageRequests, LastData.StorageRequests),\n            bugReports: CurrntData[index].bugReports * this.calcGrowth(CurrntData[index].bugReports, LastData.bugReports),\n            users: CurrntData[index].users * this.calcGrowth(CurrntData[index].users, LastData.users)\n          });\n        });\n      }\n\n      console.log(PredictedData);\n      this.setState({\n        PredictedData: PredictedData,\n        labels: labels\n      });\n    } else {\n      console.log('Error cant get this or the last comperable data ');\n    }\n  } // set the data in the chart formation\n\n\n  SetDatabugReports() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let bugReports = [];\n      let PredictedbugReports = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        console.log(CurrntData[index]);\n\n        if (Data.bugReports === 0) {\n          PredictedbugReports.push(0);\n        } else {\n          PredictedbugReports.push(Data.bugReports);\n        }\n\n        if (CurrntData[index].bugReports === 0) {\n          bugReports.push(0);\n        } else {\n          bugReports.push(CurrntData[index].bugReports);\n        }\n      });\n      return {\n        chartData: {\n          labels: this.state.labels,\n          datasets: [{\n            label: \"PredictedbugReports\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedbugReports\n          }, {\n            label: \"bugReports\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: bugReports\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataStorageReq() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let StorageRequests = [];\n      let PredictedStorageRequests = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        if (Data.StorageRequests === 0) {\n          PredictedStorageRequests.push(0);\n        } else {\n          PredictedStorageRequests.push(Data.StorageRequests);\n        }\n\n        if (CurrntData[index].StorageRequests === 0) {\n          StorageRequests.push(0);\n        } else {\n          StorageRequests.push(CurrntData[index].StorageRequests);\n        }\n      });\n      return {\n        chartData: {\n          labels: this.state.labels,\n          datasets: [{\n            label: \"PredictedStorageRequests\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedStorageRequests\n          }, {\n            label: \"StorageRequests\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: StorageRequests\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataUsers() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let Users = [];\n      let PredictedUsers = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        if (Data.users === 0) {\n          PredictedUsers.push(0);\n        } else {\n          PredictedUsers.push(Data.users);\n        }\n\n        if (CurrntData[index].users === 0) {\n          Users.push(0);\n        } else {\n          Users.push(CurrntData[index].users);\n        }\n      });\n      return {\n        chartData: {\n          labels: this.state.labels,\n          datasets: [{\n            label: \"PredictedUsers\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedUsers\n          }, {\n            label: \"Users\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: Users\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  SetDataAggre() {\n    if (this.state.PredictedData) {\n      let CurrntData = this.state.CurrentData;\n      let Storage = [];\n      let PredictedStorage = [];\n      this.state.PredictedData.forEach((Data, index) => {\n        console.log(Data);\n\n        if (Data.StorageUsegeAmmount === 0 || Data.StorageTotalFree === 0) {\n          PredictedStorage.push(0);\n        } else {\n          console.log(Data.StorageUsegeAmmount + \"||\" + Data.StorageTotalFree);\n          PredictedStorage.push(parseInt(Data.StorageUsegeAmmount / Data.StorageTotalFree * 100));\n        }\n\n        if (CurrntData[index].StorageUsegeAmmount === 0 || Data.StorageTotalFree === 0) {\n          Storage.push(0);\n        } else {\n          Storage.push(parseInt(CurrntData[index].StorageUsegeAmmount / Data.StorageTotalFree * 100));\n        }\n      });\n      console.log(Storage);\n      return {\n        chartData: {\n          labels: this.state.labels,\n          datasets: [{\n            label: \"StoragePredicted\",\n            fill: false,\n            backgroundColor: [\"rgba(50, 120, 132, 0.6)\"],\n            borderColor: ['rgba(50, 120, 132, 0.6)'],\n            data: PredictedStorage\n          }, {\n            label: \"Storage\",\n            fill: false,\n            backgroundColor: [\"rgba(120, 99, 182, 0.6)\"],\n            borderColor: ['rgba(120, 99, 182, 0.6)'],\n            data: Storage\n          }]\n        }\n      };\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"Loading ...\");\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.startDate !== null && this.state.endDate !== null && this.state.flag) {\n      this.getData();\n      this.setState({\n        flag: false\n      });\n    }\n  } // render the page \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cuntiner-fluid \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebarMenu\",\n      className: \"col-md-2 col-lg-2 d-md-block sidebar collapse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AdminCompNav, {\n      User: this.props.User,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"main\", {\n      role: \"main\",\n      className: \"col-md-9 ml-sm-auto col-lg-10 px-md-4 bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"16\",\n      height: \"16\",\n      fill: \"currentColor\",\n      className: \"bi bi-clock-history\",\n      viewBox: \"0 0 16 16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    })), \" prognostication\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-toolbar mb-2 mb-md-0 pr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DateRangePicker, {\n      startDate: this.state.startDate // momentPropTypes.momentObj or null,\n      ,\n      startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n      ,\n      endDate: this.state.endDate // momentPropTypes.momentObj or null,\n      ,\n      endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n      ,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => this.setState({\n        startDate,\n        endDate,\n        flag: true\n      }) // PropTypes.func.isRequired,\n      ,\n      focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n      ,\n      isOutsideRange: date => date.isBefore(new Date(2021, 1, 1)) || date.isAfter(new Date()),\n      onFocusChange: focusedInput => this.setState({\n        focusedInput\n      }) // PropTypes.func.isRequired,\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }))), this.state.PredictedData.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'bugReports',\n      chartData: this.SetDatabugReports(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'StorageReq',\n      chartData: this.SetDataStorageReq(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'Users',\n      chartData: this.SetDataUsers(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      type: \"line\",\n      title: 'Storage',\n      chartData: this.SetDataAggre(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, \"Loading...\")))))));\n  }\n\n}\n\nexport default withRouter(GrowCalc);","map":{"version":3,"sources":["C:/Users/ben78/Desktop/Dsos/DSOS/Frontend/dsos/src/components/GrowCalc.js"],"names":["React","Component","axios","withRouter","Chart","AdminCompNav","DateRangePicker","GrowCalc","constructor","props","state","LastData","CurrentData","labels","PredictedData","startDate","endDate","flag","getData","startIndex","EndIndex","ts","Date","now","date_ob","month","getMonth","year","getFullYear","get","then","res","console","log","data","Data","Sd","getDate","Ed","CurrentStartDate","LastStartDate","CurrentEndDate","LastEndDate","length","setState","StartIndex","CompareData","calcGrowth","Mt","M0","CurrntData","forEach","index","push","StorageTotalFree","StorageUsegeAmmount","StorageRequests","bugReports","users","SetDatabugReports","PredictedbugReports","chartData","datasets","label","fill","backgroundColor","borderColor","SetDataStorageReq","PredictedStorageRequests","SetDataUsers","Users","PredictedUsers","SetDataAggre","Storage","PredictedStorage","parseInt","componentDidMount","componentDidUpdate","render","User","focusedInput","date","isBefore","isAfter"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,qCAAP;AACA,SAASC,eAAT,QAA+B,aAA/B,C,CAEA;;AACA,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,EADF;AAEPC,MAAAA,WAAW,EAAC,EAFL;AAGPC,MAAAA,MAAM,EAAC,EAHA;AAIPC,MAAAA,aAAa,EAAC,EAJP;AAKPC,MAAAA,SAAS,EAAC,IALH;AAMPC,MAAAA,OAAO,EAAC,IAND;AAOPC,MAAAA,IAAI,EAAC;AAPE,KAAX;AASH;;AACD,QAAMC,OAAN,GAAe;AACX,QAAIP,QAAQ,GAAC,EAAb;AACA,QAAIC,WAAW,GAAC,EAAhB;AACA,QAAIO,UAAJ;AACA,QAAIC,QAAJ;;AACA,QAAG,KAAKV,KAAL,CAAWM,OAAX,KAAqB,IAAxB,EACA;AACI,UAAIK,EAAE,GAACC,IAAI,CAACC,GAAL,EAAP;AACA,UAAIC,OAAO,GAAG,IAAIF,IAAJ,CAASD,EAAT,CAAd;AACA,UAAII,KAAK,GAAGD,OAAO,CAACE,QAAR,KAAqB,CAAjC;AACA,UAAIC,IAAI,GAAGH,OAAO,CAACI,WAAR,EAAX,CAJJ,CAKI;;AACA,YAAM1B,KAAK,CAAC2B,GAAN,CAAW,wBAAuBJ,KAAK,GAAC,CAAE,IAAGE,IAAK,EAAlD,EACLG,IADK,CACCC,GAAD,IAAO;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASH,GAArB;AACApB,QAAAA,QAAQ,GAACoB,GAAG,CAACG,IAAJ,CAASH,GAAT,CAAa,CAAb,EAAgBI,IAAzB;AACH,OAJS,CAAN,CANJ,CAWA;;AACA,YAAMjC,KAAK,CAAC2B,GAAN,CAAW,wBAAuBJ,KAAM,IAAGE,IAAK,EAAhD,EACDG,IADC,CACKC,GAAD,IAAO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAtB,QAAAA,WAAW,GAACmB,GAAG,CAACG,IAAJ,CAASH,GAAT,CAAa,CAAb,EAAgBI,IAA5B;AACH,OAJH,CAAN;AAKC,KAlBD,MAkBK;AACD;AACA,UAAIC,EAAE,GAAG,IAAId,IAAJ,CAAS,KAAKZ,KAAL,CAAWK,SAApB,CAAT;AACAI,MAAAA,UAAU,GAACiB,EAAE,CAACC,OAAH,EAAX;AACAjB,MAAAA,QAAQ,GAAEkB,EAAE,CAACD,OAAH,EAAV;AACA,UAAIE,gBAAgB,GAAEH,EAAE,CAACV,QAAH,KAAgB,CAAjB,GAAoB,GAApB,GAAwBU,EAAE,CAACR,WAAH,EAA7C;AACA,UAAIY,aAAa,GAACJ,EAAE,CAACV,QAAH,KAAc,GAAd,GAAkBU,EAAE,CAACR,WAAH,EAApC;AACA,UAAIU,EAAE,GAAG,IAAIhB,IAAJ,CAAS,KAAKZ,KAAL,CAAWM,OAApB,CAAT,CAPC,CAOqC;;AACtC,UAAIyB,cAAc,GAAGH,EAAE,CAACZ,QAAH,KAAc,CAAf,GAAkB,GAAlB,GAAsBY,EAAE,CAACV,WAAH,EAA1C;AACA,UAAIc,WAAW,GAAEJ,EAAE,CAACZ,QAAH,KAAc,GAAd,GAAkBY,EAAE,CAACV,WAAH,EAAnC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYM,gBAAgB,GAAE,IAAlB,GAAuBE,cAAnC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,aAAa,GAAC,IAAd,GAAmBE,WAA/B;AACA,YAAMxC,KAAK,CAAC2B,GAAN,CAAW,wBAAuBU,gBAAiB,IAAGE,cAAe,EAArE,EACLX,IADK,CACCC,GAAD,IAAO;AACTnB,QAAAA,WAAW,GAACmB,GAAG,CAACG,IAAJ,CAASH,GAAT,CAAa,CAAb,EAAgBI,IAA5B;AACH,OAHK,CAAN;AAIA,YAAMjC,KAAK,CAAC2B,GAAN,CAAW,wBAAuBW,aAAc,IAAGA,aAAc,EAAjE,EACLV,IADK,CACCC,GAAD,IAAO;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,YAAGH,GAAG,CAACG,IAAJ,CAASH,GAAT,CAAaY,MAAb,KAAsB,CAAzB,EACA;AACIX,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,SAHD,MAGK;AACDtB,UAAAA,QAAQ,GAACoB,GAAG,CAACG,IAAJ,CAASH,GAAT,CAAa,CAAb,EAAgBI,IAAzB;AACH;AAEJ,OAVK,CAAN;AAWH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ;AACA,SAAKgC,QAAL,CAAc;AACVjC,MAAAA,QAAQ,EAACA,QADC;AAEVC,MAAAA,WAAW,EAACA,WAFF;AAGViC,MAAAA,UAAU,EAAC1B,UAHD;AAIVC,MAAAA,QAAQ,EAACA;AAJC,KAAd,EArDW,CA2DX;AACA;;AACA,SAAK0B,WAAL;AACH;;AACDC,EAAAA,UAAU,CAACC,EAAD,EAAIC,EAAJ,EAAO;AACb,QAAGD,EAAE,KAAGC,EAAR,EACA;AACI,aAAO,CAAP;AACH,KAHD,MAGM,IAAGD,EAAE,KAAG,CAAL,IAAQC,EAAE,KAAG,CAAhB,EACN;AACI,aAAO,CAAP;AACH,KAHK,MAGA,IAAGD,EAAE,KAAG,CAAL,IAAQC,EAAE,KAAG,CAAhB,EAAkB;AACpB,aAAQA,EAAE,GAACD,EAAJ,GAAQ,CAAf;AACH,KAFK,MAED;AACD,aAAQA,EAAE,GAACC,EAAJ,GAAQ,CAAf;AACH,KAXY,CAYb;AACA;;AAEH,GA3F2B,CA4F5B;;;AACAH,EAAAA,WAAW,GAAE;AACT,QAAII,UAAU,GAAC,KAAKxC,KAAL,CAAWE,WAA1B;AACA,QAAID,QAAQ,GAAC,KAAKD,KAAL,CAAWC,QAAxB;AACA,QAAIG,aAAa,GAAC,EAAlB;AACA,QAAID,MAAM,GAAC,EAAX;;AACA,QAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBgC,MAApB,KAA6B,CAA7B,IAAgC,KAAKjC,KAAL,CAAWE,WAAX,CAAuB+B,MAAvB,KAAgC,CAAnE,EACA;AACI,UAAG,KAAKjC,KAAL,CAAWC,QAAX,CAAoBgC,MAApB,IAA4B,KAAKjC,KAAL,CAAWE,WAAX,CAAuB+B,MAAtD,EACA;AACI,aAAKjC,KAAL,CAAWE,WAAX,CAAuBuC,OAAvB,CAA+B,CAACvC,WAAD,EAAawC,KAAb,KAAqB;AAChDvC,UAAAA,MAAM,CAACwC,IAAP,CAAYzC,WAAW,CAACU,IAAxB;AACAR,UAAAA,aAAa,CAACuC,IAAd,CAAmB;AACfC,YAAAA,gBAAgB,EAAC1C,WAAW,CAAC0C,gBAAZ,GAA6B,KAAKP,UAAL,CAAgBnC,WAAW,CAAC0C,gBAA5B,EAA6C3C,QAAQ,CAACyC,KAAD,CAAR,CAAgBE,gBAA7D,CAD/B;AAEfhC,YAAAA,IAAI,EAAC4B,UAAU,CAACE,KAAD,CAAV,CAAkB9B,IAFR;AAGfiC,YAAAA,mBAAmB,EAAC3C,WAAW,CAAC2C,mBAAZ,GAAgC,KAAKR,UAAL,CAAgBnC,WAAW,CAAC2C,mBAA5B,EAAgD5C,QAAQ,CAACyC,KAAD,CAAR,CAAgBG,mBAAhE,CAHrC;AAIfC,YAAAA,eAAe,EAAC5C,WAAW,CAAC4C,eAAZ,GAA4B,KAAKT,UAAL,CAAgBnC,WAAW,CAAC4C,eAA5B,EAA4C7C,QAAQ,CAACyC,KAAD,CAAR,CAAgBI,eAA5D,CAJ7B;AAKfC,YAAAA,UAAU,EAAC7C,WAAW,CAAC6C,UAAZ,GAAuB,KAAKV,UAAL,CAAgBnC,WAAW,CAAC6C,UAA5B,EAAuC9C,QAAQ,CAACyC,KAAD,CAAR,CAAgBK,UAAvD,CALnB;AAMfC,YAAAA,KAAK,EAAC9C,WAAW,CAAC8C,KAAZ,GAAkB,KAAKX,UAAL,CAAgBnC,WAAW,CAAC8C,KAA5B,EAAkC/C,QAAQ,CAACyC,KAAD,CAAR,CAAgBM,KAAlD;AANT,WAAnB;AAQH,SAVD;AAWH,OAbD,MAaK;AACD,aAAKhD,KAAL,CAAWC,QAAX,CAAoBwC,OAApB,CAA4B,CAACxC,QAAD,EAAUyC,KAAV,KAAkB;AAC1CpB,UAAAA,OAAO,CAACC,GAAR,CAAYiB,UAAU,CAACE,KAAD,CAAtB;AACAvC,UAAAA,MAAM,CAACwC,IAAP,CAAYH,UAAU,CAACE,KAAD,CAAV,CAAkB9B,IAA9B;AACAR,UAAAA,aAAa,CAACuC,IAAd,CAAmB;AACfC,YAAAA,gBAAgB,EAACJ,UAAU,CAACE,KAAD,CAAV,CAAkBE,gBAAlB,GAAmC,KAAKP,UAAL,CAAgBG,UAAU,CAACE,KAAD,CAAV,CAAkBE,gBAAlC,EAAmD3C,QAAQ,CAAC2C,gBAA5D,CADrC;AAEfhC,YAAAA,IAAI,EAAC4B,UAAU,CAACE,KAAD,CAAV,CAAkB9B,IAFR;AAGfiC,YAAAA,mBAAmB,EAACL,UAAU,CAACE,KAAD,CAAV,CAAkBG,mBAAlB,GAAsC,KAAKR,UAAL,CAAgBG,UAAU,CAACE,KAAD,CAAV,CAAkBG,mBAAlC,EAAsD5C,QAAQ,CAAC4C,mBAA/D,CAH3C;AAIfC,YAAAA,eAAe,EAACN,UAAU,CAACE,KAAD,CAAV,CAAkBI,eAAlB,GAAkC,KAAKT,UAAL,CAAgBG,UAAU,CAACE,KAAD,CAAV,CAAkBI,eAAlC,EAAkD7C,QAAQ,CAAC6C,eAA3D,CAJnC;AAKfC,YAAAA,UAAU,EAACP,UAAU,CAACE,KAAD,CAAV,CAAkBK,UAAlB,GAA6B,KAAKV,UAAL,CAAgBG,UAAU,CAACE,KAAD,CAAV,CAAkBK,UAAlC,EAA6C9C,QAAQ,CAAC8C,UAAtD,CALzB;AAMfC,YAAAA,KAAK,EAACR,UAAU,CAACE,KAAD,CAAV,CAAkBM,KAAlB,GAAwB,KAAKX,UAAL,CAAgBG,UAAU,CAACE,KAAD,CAAV,CAAkBM,KAAlC,EAAwC/C,QAAQ,CAAC+C,KAAjD;AANf,WAAnB;AAQH,SAXD;AAYH;;AACD1B,MAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAZ;AACA,WAAK8B,QAAL,CAAc;AAAC9B,QAAAA,aAAa,EAACA,aAAf;AAA6BD,QAAAA,MAAM,EAACA;AAApC,OAAd;AACH,KA/BD,MA+BK;AACDmB,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACH;AAEJ,GArI2B,CAsI5B;;;AACC0B,EAAAA,iBAAiB,GAAE;AAChB,QAAG,KAAKjD,KAAL,CAAWI,aAAd,EAA6B;AACzB,UAAIoC,UAAU,GAAC,KAAKxC,KAAL,CAAWE,WAA1B;AACA,UAAI6C,UAAU,GAAC,EAAf;AACA,UAAIG,mBAAmB,GAAC,EAAxB;AACA,WAAKlD,KAAL,CAAWI,aAAX,CAAyBqC,OAAzB,CAAiC,CAAChB,IAAD,EAAMiB,KAAN,KAAc;AACvCpB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,UAAU,CAACE,KAAD,CAAtB;;AACA,YAAGjB,IAAI,CAACsB,UAAL,KAAkB,CAArB,EAAuB;AACnBG,UAAAA,mBAAmB,CAACP,IAApB,CAAyB,CAAzB;AACH,SAFD,MAEK;AACDO,UAAAA,mBAAmB,CAACP,IAApB,CAAyBlB,IAAI,CAACsB,UAA9B;AACH;;AACD,YAAGP,UAAU,CAACE,KAAD,CAAV,CAAkBK,UAAlB,KAA+B,CAAlC,EAAoC;AAChCA,UAAAA,UAAU,CAACJ,IAAX,CAAgB,CAAhB;AACH,SAFD,MAEK;AAACI,UAAAA,UAAU,CAACJ,IAAX,CAAgBH,UAAU,CAACE,KAAD,CAAV,CAAkBK,UAAlC;AAA8C;AAC3D,OAVD;AAWJ,aAAO;AACHI,QAAAA,SAAS,EAAC;AACNhD,UAAAA,MAAM,EAAC,KAAKH,KAAL,CAAWG,MADZ;AAENiD,UAAAA,QAAQ,EAAC,CAAC;AACNC,YAAAA,KAAK,EAAC,qBADA;AAENC,YAAAA,IAAI,EAAE,KAFA;AAGNC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHV;AAINC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJP;AAKNhC,YAAAA,IAAI,EAAC0B;AALC,WAAD,EAMN;AACCG,YAAAA,KAAK,EAAC,YADP;AAECC,YAAAA,IAAI,EAAE,KAFP;AAGCC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHjB;AAICC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJd;AAKChC,YAAAA,IAAI,EAACuB;AALN,WANM;AAFH;AADP,OAAP;AAmBC,KAlCD,MAkCK;AAAC,0BAAM,wDAAN;AAAuB;AAC/B;;AACDU,EAAAA,iBAAiB,GAAE;AAChB,QAAG,KAAKzD,KAAL,CAAWI,aAAd,EAA6B;AACzB,UAAIoC,UAAU,GAAC,KAAKxC,KAAL,CAAWE,WAA1B;AACA,UAAI4C,eAAe,GAAC,EAApB;AACA,UAAIY,wBAAwB,GAAC,EAA7B;AACA,WAAK1D,KAAL,CAAWI,aAAX,CAAyBqC,OAAzB,CAAiC,CAAChB,IAAD,EAAMiB,KAAN,KAAc;AACvC,YAAGjB,IAAI,CAACqB,eAAL,KAAuB,CAA1B,EAA4B;AACxBY,UAAAA,wBAAwB,CAACf,IAAzB,CAA8B,CAA9B;AACH,SAFD,MAEK;AACDe,UAAAA,wBAAwB,CAACf,IAAzB,CAA8BlB,IAAI,CAACqB,eAAnC;AACH;;AACD,YAAGN,UAAU,CAACE,KAAD,CAAV,CAAkBI,eAAlB,KAAoC,CAAvC,EAAyC;AACrCA,UAAAA,eAAe,CAACH,IAAhB,CAAqB,CAArB;AACH,SAFD,MAEK;AAACG,UAAAA,eAAe,CAACH,IAAhB,CAAqBH,UAAU,CAACE,KAAD,CAAV,CAAkBI,eAAvC;AAAwD;AACrE,OATD;AAUJ,aAAO;AACHK,QAAAA,SAAS,EAAC;AACNhD,UAAAA,MAAM,EAAC,KAAKH,KAAL,CAAWG,MADZ;AAENiD,UAAAA,QAAQ,EAAC,CAAC;AACNC,YAAAA,KAAK,EAAC,0BADA;AAENC,YAAAA,IAAI,EAAE,KAFA;AAGNC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHV;AAINC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJP;AAKNhC,YAAAA,IAAI,EAACkC;AALC,WAAD,EAMN;AACCL,YAAAA,KAAK,EAAC,iBADP;AAECC,YAAAA,IAAI,EAAE,KAFP;AAGCC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHjB;AAICC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJd;AAKChC,YAAAA,IAAI,EAACsB;AALN,WANM;AAFH;AADP,OAAP;AAmBC,KAjCD,MAiCK;AAAC,0BAAM,wDAAN;AAAuB;AAC/B;;AACDa,EAAAA,YAAY,GAAE;AACX,QAAG,KAAK3D,KAAL,CAAWI,aAAd,EAA6B;AACzB,UAAIoC,UAAU,GAAC,KAAKxC,KAAL,CAAWE,WAA1B;AACA,UAAI0D,KAAK,GAAC,EAAV;AACA,UAAIC,cAAc,GAAC,EAAnB;AACA,WAAK7D,KAAL,CAAWI,aAAX,CAAyBqC,OAAzB,CAAiC,CAAChB,IAAD,EAAMiB,KAAN,KAAc;AACvC,YAAGjB,IAAI,CAACuB,KAAL,KAAa,CAAhB,EAAkB;AACda,UAAAA,cAAc,CAAClB,IAAf,CAAoB,CAApB;AACH,SAFD,MAEK;AACDkB,UAAAA,cAAc,CAAClB,IAAf,CAAoBlB,IAAI,CAACuB,KAAzB;AACH;;AACD,YAAGR,UAAU,CAACE,KAAD,CAAV,CAAkBM,KAAlB,KAA0B,CAA7B,EAA+B;AAC3BY,UAAAA,KAAK,CAACjB,IAAN,CAAW,CAAX;AACH,SAFD,MAEK;AAACiB,UAAAA,KAAK,CAACjB,IAAN,CAAWH,UAAU,CAACE,KAAD,CAAV,CAAkBM,KAA7B;AAAoC;AAEjD,OAVD;AAWJ,aAAO;AACHG,QAAAA,SAAS,EAAC;AACNhD,UAAAA,MAAM,EAAC,KAAKH,KAAL,CAAWG,MADZ;AAENiD,UAAAA,QAAQ,EAAC,CAAC;AACNC,YAAAA,KAAK,EAAC,gBADA;AAENC,YAAAA,IAAI,EAAE,KAFA;AAGNC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHV;AAINC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJP;AAKNhC,YAAAA,IAAI,EAACqC;AALC,WAAD,EAMN;AACCR,YAAAA,KAAK,EAAC,OADP;AAECC,YAAAA,IAAI,EAAE,KAFP;AAGCC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHjB;AAICC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJd;AAKChC,YAAAA,IAAI,EAACoC;AALN,WANM;AAFH;AADP,OAAP;AAmBC,KAlCD,MAkCK;AAAC,0BAAM,wDAAN;AAAuB;AAC/B;;AACDE,EAAAA,YAAY,GAAE;AAEX,QAAG,KAAK9D,KAAL,CAAWI,aAAd,EAA6B;AACzB,UAAIoC,UAAU,GAAC,KAAKxC,KAAL,CAAWE,WAA1B;AACA,UAAI6D,OAAO,GAAC,EAAZ;AACA,UAAIC,gBAAgB,GAAC,EAArB;AACA,WAAKhE,KAAL,CAAWI,aAAX,CAAyBqC,OAAzB,CAAiC,CAAChB,IAAD,EAAMiB,KAAN,KAAc;AAC3CpB,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACI,YAAGA,IAAI,CAACoB,mBAAL,KAA2B,CAA3B,IAA8BpB,IAAI,CAACmB,gBAAL,KAAwB,CAAzD,EAA2D;AACvDoB,UAAAA,gBAAgB,CAACrB,IAAjB,CAAsB,CAAtB;AACH,SAFD,MAEK;AACDrB,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACoB,mBAAL,GAAyB,IAAzB,GAA8BpB,IAAI,CAACmB,gBAA/C;AACAoB,UAAAA,gBAAgB,CAACrB,IAAjB,CAAsBsB,QAAQ,CAAExC,IAAI,CAACoB,mBAAL,GAAyBpB,IAAI,CAACmB,gBAA/B,GAAiD,GAAlD,CAA9B;AACH;;AACD,YAAGJ,UAAU,CAACE,KAAD,CAAV,CAAkBG,mBAAlB,KAAwC,CAAxC,IAA2CpB,IAAI,CAACmB,gBAAL,KAAwB,CAAtE,EAAwE;AACpEmB,UAAAA,OAAO,CAACpB,IAAR,CAAa,CAAb;AACH,SAFD,MAEK;AAACoB,UAAAA,OAAO,CAACpB,IAAR,CAAasB,QAAQ,CAAEzB,UAAU,CAACE,KAAD,CAAV,CAAkBG,mBAAlB,GAAsCpB,IAAI,CAACmB,gBAA5C,GAA8D,GAA/D,CAArB;AAA0F;AACvG,OAXD;AAYAtB,MAAAA,OAAO,CAACC,GAAR,CAAYwC,OAAZ;AACJ,aAAO;AACHZ,QAAAA,SAAS,EAAC;AACNhD,UAAAA,MAAM,EAAC,KAAKH,KAAL,CAAWG,MADZ;AAENiD,UAAAA,QAAQ,EAAC,CAAC;AACNC,YAAAA,KAAK,EAAC,kBADA;AAENC,YAAAA,IAAI,EAAE,KAFA;AAGNC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHV;AAINC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJP;AAKNhC,YAAAA,IAAI,EAACwC;AALC,WAAD,EAMN;AACCX,YAAAA,KAAK,EAAC,SADP;AAECC,YAAAA,IAAI,EAAE,KAFP;AAGCC,YAAAA,eAAe,EAAC,CAAC,yBAAD,CAHjB;AAICC,YAAAA,WAAW,EAAE,CAAC,yBAAD,CAJd;AAKChC,YAAAA,IAAI,EAACuC;AALN,WANM;AAFH;AADP,OAAP;AAmBC,KApCD,MAoCK;AAAC,0BAAM,wDAAN;AAAuB;AAC/B;;AACFG,EAAAA,iBAAiB,GAAE;AACf,SAAK1D,OAAL;AACH;;AACD2D,EAAAA,kBAAkB,GAAE;AAChB,QAAG,KAAKnE,KAAL,CAAWK,SAAX,KAAuB,IAAvB,IAA6B,KAAKL,KAAL,CAAWM,OAAX,KAAqB,IAAlD,IAAwD,KAAKN,KAAL,CAAWO,IAAtE,EACI;AACI,WAAKC,OAAL;AACA,WAAK0B,QAAL,CAAc;AAAC3B,QAAAA,IAAI,EAAC;AAAN,OAAd;AACH;AACR,GAtS2B,CAuS5B;;;AACA6D,EAAAA,MAAM,GAAE;AACJ,wBACI,uDACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,+CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKrE,KAAL,CAAWsE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,SAAS,EAAC,gDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,yGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,KAAK,EAAC,4BAAX;AAAwC,MAAA,KAAK,EAAC,IAA9C;AAAmD,MAAA,MAAM,EAAC,IAA1D;AAA+D,MAAA,IAAI,EAAC,cAApE;AAAmF,MAAA,SAAS,EAAC,qBAA7F;AAAmH,MAAA,OAAO,EAAC,WAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,CAAC,EAAC,wyBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,eAEO;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,CAAC,EAAC,6DAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFP,eAGO;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,CAAC,EAAC,yGAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHP,CADD,EAMK,kBANL,CADJ,eASI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AACA,MAAA,SAAS,EAAE,KAAKrE,KAAL,CAAWK,SADtB,CACiC;AADjC;AAEA,MAAA,WAAW,EAAC,2BAFZ,CAEwC;AAFxC;AAGA,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAHpB,CAG6B;AAH7B;AAIA,MAAA,SAAS,EAAC,yBAJV,CAIoC;AAJpC;AAKA,MAAA,aAAa,EAAE,CAAC;AAAED,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAAD,KAA2B,KAAK4B,QAAL,CAAc;AAAE7B,QAAAA,SAAF;AAAaC,QAAAA,OAAb;AAAqBC,QAAAA,IAAI,EAAC;AAA1B,OAAd,CAL1C,CAK0F;AAL1F;AAMA,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWsE,YANzB,CAMuC;AANvC;AAOA,MAAA,cAAc,EAAEC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,IAAI5D,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAd,KAAuC2D,IAAI,CAACE,OAAL,CAAa,IAAI7D,IAAJ,EAAb,CAP/D;AAQA,MAAA,aAAa,EAAE0D,YAAY,IAAI,KAAKpC,QAAL,CAAc;AAAEoC,QAAAA;AAAF,OAAd,CAR/B,CAQgE;AARhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CADJ,EAuBK,KAAKtE,KAAL,CAAWI,aAAX,CAAyB6B,MAAzB,KAAkC,CAAlC,gBACD;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,YAA1B;AAAwC,MAAA,SAAS,EAAE,KAAKgB,iBAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,YAA1B;AAAwC,MAAA,SAAS,EAAE,KAAKQ,iBAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,OAA1B;AAAmC,MAAA,SAAS,EAAE,KAAKE,YAAL,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,eAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,SAA1B;AAAqC,MAAA,SAAS,EAAE,KAAKG,YAAL,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,CADC,gBAeD;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,CAtCJ,CAJJ,CADJ,CADA,CADJ;AAuDH;;AAhW2B;;AAkWhC,eAAerE,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import React,{Component}from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter}from 'react-router-dom'\r\nimport Chart from '../components/chart.component';\r\nimport AdminCompNav from \"./AdminCompNav\"\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker} from 'react-dates';\r\n\r\n// calc the grow of the the servies \r\nclass GrowCalc extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LastData:[],\r\n            CurrentData:[],\r\n            labels:[],\r\n            PredictedData:[],\r\n            startDate:null,\r\n            endDate:null,\r\n            flag:true,\r\n        }\r\n    }\r\n    async getData(){\r\n        let LastData=[];\r\n        let CurrentData=[];\r\n        let startIndex;\r\n        let EndIndex;\r\n        if(this.state.endDate===null)\r\n        {\r\n            let ts=Date.now()\r\n            let date_ob = new Date(ts);\r\n            let month = date_ob.getMonth() + 1;\r\n            let year = date_ob.getFullYear();\r\n            // get last month data\r\n            await axios.get(`MonthDateRoute/Month/${month-1}-${year}`)\r\n            .then((res)=>{\r\n            console.log(res.data.res)\r\n            LastData=res.data.res[0].Data;\r\n        })\r\n        // get current month data\r\n        await axios.get(`MonthDateRoute/Month/${month}-${year}`)\r\n            .then((res)=>{\r\n                    console.log(res.data)\r\n                    CurrentData=res.data.res[0].Data;\r\n                })\r\n        }else{\r\n            // calc the grow by a range of dates and commpare to the current data\r\n            let Sd = new Date(this.state.startDate);\r\n            startIndex=Sd.getDate();\r\n            EndIndex =Ed.getDate();\r\n            let CurrentStartDate=(Sd.getMonth() + 1)+\"-\"+Sd.getFullYear();\r\n            let LastStartDate=Sd.getMonth()+\"-\"+Sd.getFullYear();\r\n            let Ed = new Date(this.state.endDate);//end Date\r\n            let CurrentEndDate =(Ed.getMonth()+1)+'-'+Ed.getFullYear();\r\n            let LastEndDate =Ed.getMonth()+\"-\"+Ed.getFullYear();\r\n            console.log(CurrentStartDate +'||'+CurrentEndDate);\r\n            console.log(LastStartDate+'||'+LastEndDate);\r\n            await axios.get(`MonthDateRoute/range/${CurrentStartDate}/${CurrentEndDate}`)\r\n            .then((res)=>{\r\n                CurrentData=res.data.res[0].Data;\r\n            })\r\n            await axios.get(`MonthDateRoute/range/${LastStartDate}/${LastStartDate}`)\r\n            .then((res)=>{\r\n                console.log(res.data)\r\n                if(res.data.res.length===0)\r\n                {\r\n                    console.log('Error cant find The Data')\r\n                }else{\r\n                    LastData=res.data.res[0].Data;\r\n                }\r\n                \r\n            })\r\n        }\r\n        console.log(LastData);\r\n        console.log(CurrentData);\r\n        this.setState({\r\n            LastData:LastData,\r\n            CurrentData:CurrentData,\r\n            StartIndex:startIndex,\r\n            EndIndex:EndIndex\r\n        })\r\n        //get last year currecnt month data\r\n        //and this year month data\r\n        this.CompareData();\r\n    }\r\n    calcGrowth(Mt,M0){\r\n        if(Mt===M0)\r\n        {\r\n            return(1);\r\n        }else if(Mt===0&&M0!==0)\r\n        {\r\n            return(0);\r\n        }else if(Mt!==0&&M0===0){\r\n            return((M0/Mt)+1)\r\n        }else{\r\n            return((Mt/M0)+1)\r\n        }\r\n        // let q = M0/Mt;\r\n        // Math.pow(q,t)\r\n\r\n    }\r\n    //compare the Data\r\n    CompareData(){\r\n        let CurrntData=this.state.CurrentData;\r\n        let LastData=this.state.LastData;\r\n        let PredictedData=[];\r\n        let labels=[];\r\n        if(this.state.LastData.length!==0&&this.state.CurrentData.length!==0)\r\n        {\r\n            if(this.state.LastData.length>=this.state.CurrentData.length)\r\n            {\r\n                this.state.CurrentData.forEach((CurrentData,index)=>{\r\n                    labels.push(CurrentData.Date);\r\n                    PredictedData.push({\r\n                        StorageTotalFree:CurrentData.StorageTotalFree*this.calcGrowth(CurrentData.StorageTotalFree,LastData[index].StorageTotalFree),\r\n                        Date:CurrntData[index].Date,\r\n                        StorageUsegeAmmount:CurrentData.StorageUsegeAmmount*this.calcGrowth(CurrentData.StorageUsegeAmmount,LastData[index].StorageUsegeAmmount),\r\n                        StorageRequests:CurrentData.StorageRequests*this.calcGrowth(CurrentData.StorageRequests,LastData[index].StorageRequests),\r\n                        bugReports:CurrentData.bugReports*this.calcGrowth(CurrentData.bugReports,LastData[index].bugReports),\r\n                        users:CurrentData.users*this.calcGrowth(CurrentData.users,LastData[index].users),\r\n                    })    \r\n                })\r\n            }else{\r\n                this.state.LastData.forEach((LastData,index)=>{\r\n                    console.log(CurrntData[index]);\r\n                    labels.push(CurrntData[index].Date);\r\n                    PredictedData.push({\r\n                        StorageTotalFree:CurrntData[index].StorageTotalFree*this.calcGrowth(CurrntData[index].StorageTotalFree,LastData.StorageTotalFree),\r\n                        Date:CurrntData[index].Date,\r\n                        StorageUsegeAmmount:CurrntData[index].StorageUsegeAmmount*this.calcGrowth(CurrntData[index].StorageUsegeAmmount,LastData.StorageUsegeAmmount),\r\n                        StorageRequests:CurrntData[index].StorageRequests*this.calcGrowth(CurrntData[index].StorageRequests,LastData.StorageRequests),\r\n                        bugReports:CurrntData[index].bugReports*this.calcGrowth(CurrntData[index].bugReports,LastData.bugReports),\r\n                        users:CurrntData[index].users*this.calcGrowth(CurrntData[index].users,LastData.users),\r\n                    })   \r\n                })\r\n            }\r\n            console.log(PredictedData)\r\n            this.setState({PredictedData:PredictedData,labels:labels})\r\n        }else{\r\n            console.log('Error cant get this or the last comperable data ')\r\n        }\r\n\r\n    }\r\n    // set the data in the chart formation\r\n     SetDatabugReports(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let bugReports=[];\r\n            let PredictedbugReports=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                    console.log(CurrntData[index])\r\n                    if(Data.bugReports===0){\r\n                        PredictedbugReports.push(0);\r\n                    }else{\r\n                        PredictedbugReports.push(Data.bugReports);\r\n                    }\r\n                    if(CurrntData[index].bugReports===0){\r\n                        bugReports.push(0);\r\n                    }else{bugReports.push(CurrntData[index].bugReports)}\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:this.state.labels,\r\n                datasets:[{\r\n                    label:\"PredictedbugReports\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedbugReports\r\n                }, {\r\n                    label:\"bugReports\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:bugReports\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataStorageReq(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let StorageRequests=[];\r\n            let PredictedStorageRequests=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{ \r\n                    if(Data.StorageRequests===0){\r\n                        PredictedStorageRequests.push(0);\r\n                    }else{\r\n                        PredictedStorageRequests.push(Data.StorageRequests);\r\n                    }\r\n                    if(CurrntData[index].StorageRequests===0){\r\n                        StorageRequests.push(0);\r\n                    }else{StorageRequests.push(CurrntData[index].StorageRequests)}\r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:this.state.labels,\r\n                datasets:[{\r\n                    label:\"PredictedStorageRequests\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedStorageRequests \r\n                }, {\r\n                    label:\"StorageRequests\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:StorageRequests \r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataUsers(){\r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let Users=[];\r\n            let PredictedUsers=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                    if(Data.users===0){\r\n                        PredictedUsers.push(0);\r\n                    }else{\r\n                        PredictedUsers.push(Data.users);\r\n                    }\r\n                    if(CurrntData[index].users===0){\r\n                        Users.push(0);\r\n                    }else{Users.push(CurrntData[index].users)}\r\n                \r\n            })\r\n        return({\r\n            chartData:{\r\n                labels:this.state.labels,\r\n                datasets:[{\r\n                    label:\"PredictedUsers\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedUsers\r\n                }, {\r\n                    label:\"Users\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:Users\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n     SetDataAggre(){\r\n        \r\n        if(this.state.PredictedData) {\r\n            let CurrntData=this.state.CurrentData;\r\n            let Storage=[];\r\n            let PredictedStorage=[];\r\n            this.state.PredictedData.forEach((Data,index)=>{\r\n                console.log(Data)\r\n                    if(Data.StorageUsegeAmmount===0||Data.StorageTotalFree===0){\r\n                        PredictedStorage.push(0);\r\n                    }else{\r\n                        console.log(Data.StorageUsegeAmmount+\"||\"+Data.StorageTotalFree)\r\n                        PredictedStorage.push(parseInt((Data.StorageUsegeAmmount/Data.StorageTotalFree)*100));\r\n                    }\r\n                    if(CurrntData[index].StorageUsegeAmmount===0||Data.StorageTotalFree===0){\r\n                        Storage.push(0);\r\n                    }else{Storage.push(parseInt((CurrntData[index].StorageUsegeAmmount/Data.StorageTotalFree)*100))}\r\n            })\r\n            console.log(Storage)\r\n        return({\r\n            chartData:{\r\n                labels:this.state.labels,\r\n                datasets:[{\r\n                    label:\"StoragePredicted\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(50, 120, 132, 0.6)\"],\r\n                    borderColor: ['rgba(50, 120, 132, 0.6)',],\r\n                    data:PredictedStorage\r\n                }, {\r\n                    label:\"Storage\",\r\n                    fill: false,\r\n                    backgroundColor:[\"rgba(120, 99, 182, 0.6)\"],\r\n                    borderColor: ['rgba(120, 99, 182, 0.6)',],\r\n                    data:Storage\r\n                }\r\n                ]\r\n            }\r\n        })\r\n        }else{return<>Loading ...</>}       \r\n     }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.startDate!==null&&this.state.endDate!==null&&this.state.flag)\r\n            {\r\n                this.getData();\r\n                this.setState({flag:false});\r\n            }\r\n    }\r\n    // render the page \r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"cuntiner-fluid \">\r\n                <div className=\"row\">\r\n                    <div id=\"sidebarMenu\" className=\"col-md-2 col-lg-2 d-md-block sidebar collapse\">\r\n                        <AdminCompNav User={this.props.User} />\r\n                    </div>\r\n                    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4 bg-white\">\r\n                        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                            <h1 className=\"h2\">\r\n                             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-clock-history\" viewBox=\"0 0 16 16\">\r\n                                    <path fillRule=\"evenodd\" d=\"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\"/>\r\n                                    <path fillRule=\"evenodd\" d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\"/>\r\n                                </svg>\r\n                                {\" prognostication\"}\r\n                            </h1>  \r\n                            <div className='btn-toolbar mb-2 mb-md-0 pr-5'>\r\n                                <DateRangePicker\r\n                                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                                startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                                endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                                onDatesChange={({ startDate, endDate}) => this.setState({ startDate, endDate,flag:true})} // PropTypes.func.isRequired,\r\n                                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                                isOutsideRange={date => date.isBefore(new Date(2021, 1, 1)) || date.isAfter(new Date())}\r\n                                onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {this.state.PredictedData.length!==0?\r\n                        <div className=\"row d-flex justify-content-around\">\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'bugReports'} chartData={this.SetDatabugReports()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'StorageReq'} chartData={this.SetDataStorageReq()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'Users'} chartData={this.SetDataUsers()}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <Chart type='line' title={'Storage'} chartData={this.SetDataAggre()}/>\r\n                            </div>\r\n                        </div>:            \r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(GrowCalc)"]},"metadata":{},"sourceType":"module"}