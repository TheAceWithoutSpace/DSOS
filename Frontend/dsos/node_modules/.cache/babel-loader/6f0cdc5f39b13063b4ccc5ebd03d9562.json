{"ast":null,"code":"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass GrowCalc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LastData: [],\n      CurrentData: []\n    };\n  }\n\n  async getData() {\n    let ts = Date.now();\n    let date_ob = new Date(ts);\n    let month = date_ob.getMonth() + 1;\n    let year = date_ob.getFullYear();\n    let LastData = [];\n    let CurrentData = [];\n    await axios.get(`http://localhost:3000/MonthDateRoute/Month/${month - 1}.${year}`).then(res => {\n      // console.log(res.data)\n      LastData = res.data;\n    });\n    await axios.get(`http://localhost:3000/MonthDateRoute/Month/${month}.${year}`).then(res => {\n      // console.log(res.data)\n      CurrentData = res.data;\n    });\n    console.log(LastData);\n    console.log(CurrentData);\n    this.setState({\n      LastData: LastData,\n      CurrentData: CurrentData\n    }); //get last year currecnt month data\n    //and this year month data\n\n    this.CompareData();\n  }\n\n  calcGrowth(Mt, M0, T) {\n    console.log(Mt / M0 * 100); // let q = M0/Mt;\n    // Math.pow(q,t)\n  }\n\n  CompareData() {\n    let CurrntData = this.state.LastData;\n    let LastData = this.state.CurrentData;\n\n    if (this.state.LastData.length !== 0 && this.state.CurrentData.length !== 0) {\n      console.log(\"letsBegin\");\n\n      if (this.state.LastData.length >= this.state.CurrentData.length) {\n        this.state.CurrentData.forEach((CurrentData, index) => {});\n      } else {\n        this.state.LastData.forEach((LastData, index) => {\n          console.log(index);\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"Hello\");\n  }\n\n}\n\nexport default withRouter(GrowCalc);","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/GrowCalc.js"],"names":["React","Component","axios","withRouter","GrowCalc","constructor","props","state","LastData","CurrentData","getData","ts","Date","now","date_ob","month","getMonth","year","getFullYear","get","then","res","data","console","log","setState","CompareData","calcGrowth","Mt","M0","T","CurrntData","length","forEach","index","componentDidMount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAwB,kBAAxB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,EADF;AAEPC,MAAAA,WAAW,EAAC;AAFL,KAAX;AAIH;;AACD,QAAMC,OAAN,GAAe;AACX,QAAIC,EAAE,GAACC,IAAI,CAACC,GAAL,EAAP;AACA,QAAIC,OAAO,GAAG,IAAIF,IAAJ,CAASD,EAAT,CAAd;AACA,QAAII,KAAK,GAAGD,OAAO,CAACE,QAAR,KAAqB,CAAjC;AACA,QAAIC,IAAI,GAAGH,OAAO,CAACI,WAAR,EAAX;AACA,QAAIV,QAAQ,GAAC,EAAb;AACA,QAAIC,WAAW,GAAC,EAAhB;AACA,UAAMP,KAAK,CAACiB,GAAN,CAAW,8CAA6CJ,KAAK,GAAC,CAAE,IAAGE,IAAK,EAAxE,EACDG,IADC,CACKC,GAAD,IAAO;AACb;AACAb,MAAAA,QAAQ,GAACa,GAAG,CAACC,IAAb;AACH,KAJK,CAAN;AAKA,UAAMpB,KAAK,CAACiB,GAAN,CAAW,8CAA6CJ,KAAM,IAAGE,IAAK,EAAtE,EACDG,IADC,CACKC,GAAD,IAAO;AACL;AACAZ,MAAAA,WAAW,GAACY,GAAG,CAACC,IAAhB;AACH,KAJH,CAAN;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACA,SAAKgB,QAAL,CAAc;AACVjB,MAAAA,QAAQ,EAACA,QADC;AAEVC,MAAAA,WAAW,EAACA;AAFF,KAAd,EAnBW,CAsBX;AACA;;AACA,SAAKiB,WAAL;AACH;;AACDC,EAAAA,UAAU,CAACC,EAAD,EAAIC,EAAJ,EAAOC,CAAP,EAAS;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAaI,EAAE,GAACC,EAAJ,GAAQ,GAApB,EADe,CAEf;AACA;AAEH;;AACDH,EAAAA,WAAW,GAAE;AACT,QAAIK,UAAU,GAAC,KAAKxB,KAAL,CAAWC,QAA1B;AACA,QAAIA,QAAQ,GAAC,KAAKD,KAAL,CAAWE,WAAxB;;AACA,QAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBwB,MAApB,KAA6B,CAA7B,IAAgC,KAAKzB,KAAL,CAAWE,WAAX,CAAuBuB,MAAvB,KAAgC,CAAnE,EACA;AACIT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,UAAG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBwB,MAApB,IAA4B,KAAKzB,KAAL,CAAWE,WAAX,CAAuBuB,MAAtD,EACA;AACI,aAAKzB,KAAL,CAAWE,WAAX,CAAuBwB,OAAvB,CAA+B,CAACxB,WAAD,EAAayB,KAAb,KAAqB,CAEnD,CAFD;AAGH,OALD,MAKK;AACD,aAAK3B,KAAL,CAAWC,QAAX,CAAoByB,OAApB,CAA4B,CAACzB,QAAD,EAAU0B,KAAV,KAAkB;AAC1CX,UAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,SAFD;AAGH;AACJ;AACJ;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKzB,OAAL;AACH;;AACD0B,EAAAA,MAAM,GAAE;AACJ,wBACI,kDADJ;AAKH;;AAnE2B;;AAqEhC,eAAejC,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import React,{Component}from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter}from 'react-router-dom'\r\n\r\nclass GrowCalc extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LastData:[],\r\n            CurrentData:[]\r\n        }\r\n    }\r\n    async getData(){\r\n        let ts=Date.now()\r\n        let date_ob = new Date(ts);\r\n        let month = date_ob.getMonth() + 1;\r\n        let year = date_ob.getFullYear();\r\n        let LastData=[];\r\n        let CurrentData=[];\r\n        await axios.get(`http://localhost:3000/MonthDateRoute/Month/${month-1}.${year}`)\r\n            .then((res)=>{\r\n            // console.log(res.data)\r\n            LastData=res.data;\r\n        })\r\n        await axios.get(`http://localhost:3000/MonthDateRoute/Month/${month}.${year}`)\r\n            .then((res)=>{\r\n                    // console.log(res.data)\r\n                    CurrentData=res.data;\r\n                })\r\n        console.log(LastData);\r\n        console.log(CurrentData);\r\n        this.setState({\r\n            LastData:LastData,\r\n            CurrentData:CurrentData})\r\n        //get last year currecnt month data\r\n        //and this year month data\r\n        this.CompareData();\r\n    }\r\n    calcGrowth(Mt,M0,T){\r\n        console.log((Mt/M0)*100)\r\n        // let q = M0/Mt;\r\n        // Math.pow(q,t)\r\n\r\n    }\r\n    CompareData(){\r\n        let CurrntData=this.state.LastData;\r\n        let LastData=this.state.CurrentData;\r\n        if(this.state.LastData.length!==0&&this.state.CurrentData.length!==0)\r\n        {\r\n            console.log(\"letsBegin\")\r\n            if(this.state.LastData.length>=this.state.CurrentData.length)\r\n            {\r\n                this.state.CurrentData.forEach((CurrentData,index)=>{\r\n\r\n                })\r\n            }else{\r\n                this.state.LastData.forEach((LastData,index)=>{\r\n                    console.log(index);\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            Hello\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(GrowCalc)"]},"metadata":{},"sourceType":"module"}