{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        n: 0\n      },\n      Requests: [],\n      SVM: ''\n    }; //    this.setdata=this.setdata.bind(this);\n  }\n\n  componentDidUpdate(nextProps) {\n    if (this.props !== nextProps) {\n      let SVMS = [];\n      let Amount;\n      this.props.SVMS.forEach(async SVM => {\n        await axios.get(`http://localhost:3000/Request/Svm/${SVM}`).then(res => {\n          Amount = 0;\n          res.data.Req.forEach(Req => {\n            Amount += Req.Amount;\n          });\n        });\n        SVMS.push({\n          chartData: {\n            labels: ['Free', 'Used'],\n            datasets: [{\n              label: \"Requests\",\n              backgroundColor: [\"rgba(175, 146, 234, 0.65)\", \"rgba(245, 73, 120, 0.65)\"],\n              data: [Amount, 1000 - Amount]\n            }]\n          }\n        });\n        this.setState({\n          SVM: SVMS\n        });\n      });\n    }\n  }\n\n  Charts() {\n    return this.props.SVMS.map((currntSvm, index) => {\n      let chartData;\n      if (this.state.SVM[index]) chartData = this.state.SVM[index].chartData;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, this.state.chartData.datasets ? /*#__PURE__*/React.createElement(Chart, {\n        type: \"Pie\",\n        title: currntSvm,\n        chartData: chartData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","SystemGrafth","constructor","props","state","chartData","n","Requests","SVM","componentDidUpdate","nextProps","SVMS","Amount","forEach","get","then","res","data","Req","push","labels","datasets","label","backgroundColor","setState","Charts","map","currntSvm","index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAuC,OAAvC;AACC,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAoC;AAChDK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,SAAS,EAAC;AAACC,QAAAA,CAAC,EAAC;AAAH,OADA;AAEVC,MAAAA,QAAQ,EAAC,EAFC;AAGVC,MAAAA,GAAG,EAAC;AAHM,KAAX,CAFc,CAOjB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAClB;AAAI,QAAG,KAAKP,KAAL,KAAaO,SAAhB,EAA0B;AAC1B,UAAIC,IAAI,GAAC,EAAT;AACA,UAAIC,MAAJ;AACA,WAAKT,KAAL,CAAWQ,IAAX,CAAgBE,OAAhB,CAAwB,MAAML,GAAN,IAAY;AAChC,cAAMT,KAAK,CAACe,GAAN,CAAW,qCAAoCN,GAAI,EAAnD,EACDO,IADC,CACKC,GAAD,IAAO;AACTJ,UAAAA,MAAM,GAAC,CAAP;AACAI,UAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaL,OAAb,CAAqBK,GAAG,IAAI;AACxBN,YAAAA,MAAM,IAAEM,GAAG,CAACN,MAAZ;AACH,WAFD;AAGH,SANC,CAAN;AAOID,QAAAA,IAAI,CAACQ,IAAL,CAAU;AACNd,UAAAA,SAAS,EAAC;AACNe,YAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,MAAR,CADD;AAENC,YAAAA,QAAQ,EAAC,CAAC;AACTC,cAAAA,KAAK,EAAC,UADG;AAETC,cAAAA,eAAe,EAAC,CAAC,2BAAD,EACC,0BADD,CAFP;AAKTN,cAAAA,IAAI,EAAC,CAACL,MAAD,EAAS,OAAKA,MAAd;AALI,aAAD;AAFH;AADJ,SAAV;AAaA,aAAKY,QAAL,CAAc;AAAChB,UAAAA,GAAG,EAACG;AAAL,SAAd;AACP,OAtBD;AAuBC;AACJ;;AACAc,EAAAA,MAAM,GAAE;AACL,WACI,KAAKtB,KAAL,CAAWQ,IAAX,CAAgBe,GAAhB,CAAoB,CAACC,SAAD,EAAWC,KAAX,KAAmB;AACnC,UAAIvB,SAAJ;AACA,UAAG,KAAKD,KAAL,CAAWI,GAAX,CAAeoB,KAAf,CAAH,EACIvB,SAAS,GAAC,KAAKD,KAAL,CAAWI,GAAX,CAAeoB,KAAf,EAAsBvB,SAAhC;AACJ,0BACQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEuB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKxB,KAAL,CAAWC,SAAX,CAAqBgB,QAArB,gBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,KAAK,EAAEM,SAAzB;AAAoC,QAAA,SAAS,EAAEtB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAEA,IAHL,CADR;AAOH,KAXD,CADJ;AAcF;;AAEEwB,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,MAAL,EADL,CADJ;AAKH;;AA/D8C","sourcesContent":["import React,{Component, Fragment}from 'react';\r\n import axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{n:0},\r\n        Requests:[],\r\n        SVM:'',\r\n       }\r\n    //    this.setdata=this.setdata.bind(this);\r\n}\r\n\r\ncomponentDidUpdate(nextProps)\r\n{   if(this.props!==nextProps){\r\n    let SVMS=[];\r\n    let Amount;\r\n    this.props.SVMS.forEach(async(SVM)=>{\r\n        await axios.get(`http://localhost:3000/Request/Svm/${SVM}`)\r\n            .then((res)=>{ \r\n                Amount=0;\r\n                res.data.Req.forEach(Req => {\r\n                    Amount+=Req.Amount;\r\n                });\r\n            })         \r\n            SVMS.push({\r\n                chartData:{\r\n                    labels:['Free','Used'],\r\n                    datasets:[{\r\n                     label:\"Requests\",\r\n                     backgroundColor:[\"rgba(175, 146, 234, 0.65)\",\r\n                                      \"rgba(245, 73, 120, 0.65)\",\r\n                                      ],\r\n                     data:[Amount,(1000-Amount)]\r\n                    },\r\n                    ]\r\n                }\r\n            })\r\n            this.setState({SVM:SVMS})\r\n    });\r\n    }   \r\n}\r\n Charts(){\r\n    return(\r\n        this.props.SVMS.map((currntSvm,index)=>{\r\n            let chartData\r\n            if(this.state.SVM[index])\r\n                chartData=this.state.SVM[index].chartData;\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.state.chartData.datasets?\r\n                             <Chart type='Pie' title={currntSvm} chartData={chartData}/>\r\n                        :null}\r\n                    </div>\r\n                )\r\n        })\r\n    )\r\n }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}