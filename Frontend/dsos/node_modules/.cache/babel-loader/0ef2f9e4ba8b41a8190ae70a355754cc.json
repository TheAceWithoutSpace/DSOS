{"ast":null,"code":"'use strict';\n\nvar ToObject = require('es-abstract/2019/ToObject');\n\nvar ToLength = require('es-abstract/2019/ToLength');\n\nvar IsCallable = require('es-abstract/2019/IsCallable');\n\nmodule.exports = function find(predicate) {\n  var list = ToObject(this);\n  var length = ToLength(list.length);\n\n  if (!IsCallable(predicate)) {\n    throw new TypeError('Array#find: predicate must be a function');\n  }\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var thisArg;\n\n  if (arguments.length > 0) {\n    thisArg = arguments[1];\n  }\n\n  for (var i = 0, value; i < length; i++) {\n    value = list[i]; // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n\n    if (predicate.apply(thisArg, [value, i, list])) {\n      return value;\n    }\n  }\n\n  return void 0;\n};","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/node_modules/array.prototype.find/implementation.js"],"names":["ToObject","require","ToLength","IsCallable","module","exports","find","predicate","list","length","TypeError","thisArg","arguments","i","value","apply"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,6BAAD,CAAxB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,SAAd,EAAyB;AACzC,MAAIC,IAAI,GAAGR,QAAQ,CAAC,IAAD,CAAnB;AACA,MAAIS,MAAM,GAAGP,QAAQ,CAACM,IAAI,CAACC,MAAN,CAArB;;AACA,MAAI,CAACN,UAAU,CAACI,SAAD,CAAf,EAA4B;AAC3B,UAAM,IAAIG,SAAJ,CAAc,0CAAd,CAAN;AACA;;AACD,MAAID,MAAM,KAAK,CAAf,EAAkB;AACjB,WAAO,KAAK,CAAZ;AACA;;AACD,MAAIE,OAAJ;;AACA,MAAIC,SAAS,CAACH,MAAV,GAAmB,CAAvB,EAA0B;AACzBE,IAAAA,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAnB;AACA;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,KAAhB,EAAuBD,CAAC,GAAGJ,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;AACvCC,IAAAA,KAAK,GAAGN,IAAI,CAACK,CAAD,CAAZ,CADuC,CAEvC;;AACA,QAAIN,SAAS,CAACQ,KAAV,CAAgBJ,OAAhB,EAAyB,CAACG,KAAD,EAAQD,CAAR,EAAWL,IAAX,CAAzB,CAAJ,EAAgD;AAC/C,aAAOM,KAAP;AACA;AACD;;AACD,SAAO,KAAK,CAAZ;AACA,CAtBD","sourcesContent":["'use strict';\r\n\r\nvar ToObject = require('es-abstract/2019/ToObject');\r\nvar ToLength = require('es-abstract/2019/ToLength');\r\nvar IsCallable = require('es-abstract/2019/IsCallable');\r\n\r\nmodule.exports = function find(predicate) {\r\n\tvar list = ToObject(this);\r\n\tvar length = ToLength(list.length);\r\n\tif (!IsCallable(predicate)) {\r\n\t\tthrow new TypeError('Array#find: predicate must be a function');\r\n\t}\r\n\tif (length === 0) {\r\n\t\treturn void 0;\r\n\t}\r\n\tvar thisArg;\r\n\tif (arguments.length > 0) {\r\n\t\tthisArg = arguments[1];\r\n\t}\r\n\r\n\tfor (var i = 0, value; i < length; i++) {\r\n\t\tvalue = list[i];\r\n\t\t// inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\r\n\t\tif (predicate.apply(thisArg, [value, i, list])) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\treturn void 0;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}