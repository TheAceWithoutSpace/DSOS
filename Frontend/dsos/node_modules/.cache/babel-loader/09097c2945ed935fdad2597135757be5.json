{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\SystemGrafth.component.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Chart from './chart.component';\nexport default class SystemGrafth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        n: 0\n      },\n      Requests: [],\n      SVM: '',\n      TotalAmmount: ''\n    }; //    this.setdata=this.setdata.bind(this);\n  }\n\n  async componentDidMount(nextProps) {\n    console.log(this.props + \"||\" + nextProps);\n\n    if (this.props !== nextProps) {\n      let TotalAmount = 0;\n      let UsedAmount = 0;\n      let SVMS = [];\n      let SVMSArray = [];\n      axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`).then(res => {\n        TotalAmount = res.data.Req[0].TotalAmount;\n        UsedAmount = res.data.Req[0].Amount;\n      });\n      await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`).then(res => SVMSArray = res.data.Req);\n      console.log(SVMSArray);\n      SVMSArray.forEach(SVM => {\n        console.log(SVM);\n      });\n      SVMS.push({\n        chartData: {\n          labels: ['Free', 'Used'],\n          datasets: [{\n            label: \"Requests\",\n            backgroundColor: [\"rgba(245, 73, 120, 0.65)\", \"rgba(175, 146, 234, 0.65)\"],\n            data: [TotalAmount, UsedAmount]\n          }]\n        }\n      });\n      this.setState({\n        SVM: SVMS\n      });\n    }\n  }\n\n  Charts() {\n    return this.props.SVMS.map((currntSvm, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, this.state.SVM[index] ? /*#__PURE__*/React.createElement(Chart, {\n        type: \"Pie\",\n        title: currntSvm,\n        chartData: this.state.SVM[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 30\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.Charts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/SystemGrafth.component.js"],"names":["React","Component","Fragment","axios","Chart","SystemGrafth","constructor","props","state","chartData","n","Requests","SVM","TotalAmmount","componentDidMount","nextProps","console","log","TotalAmount","UsedAmount","SVMS","SVMSArray","get","Aggre","then","res","data","Req","Amount","forEach","push","labels","datasets","label","backgroundColor","setState","Charts","map","currntSvm","index","render"],"mappings":"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","sourcesContent":["import React,{Component, Fragment}from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './chart.component';\r\n\r\nexport default class SystemGrafth extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n        chartData:{n:0},\r\n        Requests:[],\r\n        SVM:'',\r\n        TotalAmmount:'',\r\n       }\r\n    //    this.setdata=this.setdata.bind(this);\r\n}\r\n\r\nasync componentDidMount(nextProps)\r\n{   console.log(this.props +\"||\"+nextProps)\r\n    if(this.props!==nextProps){\r\n    let TotalAmount=0;\r\n    let UsedAmount=0;\r\n    let SVMS=[];\r\n    let SVMSArray=[];\r\n     axios.get(`http://localhost:3000/AGGREGATE/Aggre/${this.props.Aggre}`)\r\n        .then((res)=>{TotalAmount=res.data.Req[0].TotalAmount \r\n            UsedAmount=res.data.Req[0].Amount});\r\n     await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`)\r\n        .then((res)=>SVMSArray=res.data.Req);\r\n        console.log(SVMSArray)\r\n        SVMSArray.forEach((SVM)=>{\r\n                console.log(SVM)\r\n            })         \r\n            SVMS.push({\r\n                chartData:{\r\n                    labels:['Free','Used'],\r\n                    datasets:[{\r\n                     label:\"Requests\",\r\n                     backgroundColor:[\"rgba(245, 73, 120, 0.65)\",\r\n                                      \"rgba(175, 146, 234, 0.65)\",\r\n                                      ],\r\n                     data:[(TotalAmount),UsedAmount]\r\n                    },\r\n                    ]\r\n                }\r\n            })\r\n            this.setState({SVM:SVMS})\r\n    }   \r\n}\r\n Charts(){\r\n    return(\r\n        this.props.SVMS.map((currntSvm,index)=>{\r\n            return(\r\n                    <div className=\"col-md-6\" key={index}>\r\n                        {this.state.SVM[index]?\r\n                             <Chart type='Pie' title={currntSvm} chartData={this.state.SVM[index]}/>\r\n                        :null}\r\n                    </div>\r\n                )\r\n        })\r\n    )\r\n }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Fragment>\r\n                {this.Charts()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}