{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar has = require('has');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function IsPropertyDescriptor(ES, Desc) {\n  if (ES.Type(Desc) !== 'Object') {\n    return false;\n  }\n\n  var allowed = {\n    '[[Configurable]]': true,\n    '[[Enumerable]]': true,\n    '[[Get]]': true,\n    '[[Set]]': true,\n    '[[Value]]': true,\n    '[[Writable]]': true\n  };\n\n  for (var key in Desc) {\n    // eslint-disable-line no-restricted-syntax\n    if (has(Desc, key) && !allowed[key]) {\n      return false;\n    }\n  }\n\n  if (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {\n    throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n  }\n\n  return true;\n};","map":{"version":3,"sources":["C:/Users/ben78/Desktop/ספר פרוקייט/DSOS/Frontend/dsos/node_modules/array.prototype.flat/node_modules/es-abstract/helpers/isPropertyDescriptor.js"],"names":["GetIntrinsic","require","has","$TypeError","module","exports","IsPropertyDescriptor","ES","Desc","Type","allowed","key","IsDataDescriptor","IsAccessorDescriptor"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIE,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,EAA9B,EAAkCC,IAAlC,EAAwC;AACxD,MAAID,EAAE,CAACE,IAAH,CAAQD,IAAR,MAAkB,QAAtB,EAAgC;AAC/B,WAAO,KAAP;AACA;;AACD,MAAIE,OAAO,GAAG;AACb,wBAAoB,IADP;AAEb,sBAAkB,IAFL;AAGb,eAAW,IAHE;AAIb,eAAW,IAJE;AAKb,iBAAa,IALA;AAMb,oBAAgB;AANH,GAAd;;AASA,OAAK,IAAIC,GAAT,IAAgBH,IAAhB,EAAsB;AAAE;AACvB,QAAIN,GAAG,CAACM,IAAD,EAAOG,GAAP,CAAH,IAAkB,CAACD,OAAO,CAACC,GAAD,CAA9B,EAAqC;AACpC,aAAO,KAAP;AACA;AACD;;AAED,MAAIJ,EAAE,CAACK,gBAAH,CAAoBJ,IAApB,KAA6BD,EAAE,CAACM,oBAAH,CAAwBL,IAAxB,CAAjC,EAAgE;AAC/D,UAAM,IAAIL,UAAJ,CAAe,oEAAf,CAAN;AACA;;AACD,SAAO,IAAP;AACA,CAvBD","sourcesContent":["'use strict';\r\n\r\nvar GetIntrinsic = require('../GetIntrinsic');\r\n\r\nvar has = require('has');\r\nvar $TypeError = GetIntrinsic('%TypeError%');\r\n\r\nmodule.exports = function IsPropertyDescriptor(ES, Desc) {\r\n\tif (ES.Type(Desc) !== 'Object') {\r\n\t\treturn false;\r\n\t}\r\n\tvar allowed = {\r\n\t\t'[[Configurable]]': true,\r\n\t\t'[[Enumerable]]': true,\r\n\t\t'[[Get]]': true,\r\n\t\t'[[Set]]': true,\r\n\t\t'[[Value]]': true,\r\n\t\t'[[Writable]]': true\r\n\t};\r\n\r\n\tfor (var key in Desc) { // eslint-disable-line no-restricted-syntax\r\n\t\tif (has(Desc, key) && !allowed[key]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tif (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {\r\n\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\r\n\t}\r\n\treturn true;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}