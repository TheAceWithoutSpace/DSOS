{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\UserComponent\\\\calendar.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates'; // CSS Modules, react-datepicker-cssmodules.css\n\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nclass calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.state = {\n      startDate: null,\n      endDate: null\n    };\n  }\n\n  handleDateChange(e) {\n    this.setState({\n      startDate: e\n    });\n  }\n\n  render() {\n    // console.log()\n    const currentdate = new Date(); // minDate={new Date(2020, 9, 24)}\n    // maxDate={currentdate}\n\n    console.log(currentdate);\n    return /*#__PURE__*/React.createElement(DateRangePicker, {\n      startDate: this.state.startDate // momentPropTypes.momentObj or null,\n      ,\n      startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n      ,\n      endDate: this.state.endDate // momentPropTypes.momentObj or null,\n      ,\n      endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n      ,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => this.setState({\n        startDate,\n        endDate\n      }) // PropTypes.func.isRequired,\n      ,\n      focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n      ,\n      isOutsideRange: date => date.isBefore(new Date(2020, 9, 24)) || date.isAfter(currentdate),\n      onFocusChange: focusedInput => this.setState({\n        focusedInput\n      }) // PropTypes.func.isRequired,\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }) // <DatePicker className=\"mr-5\"\n    //  dateFormat=\"dd - MM - yyyy\"\n    //  selected={this.state.startDate}\n    //  onChange={this.handleDateChange}\n    //  minDate={new Date(2020, 9, 24)}\n    //  maxDate={currentdate}\n    //  />\n    ;\n  }\n\n}\n\n;\nexport default calendar;","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/UserComponent/calendar.js"],"names":["React","Component","DatePicker","moment","DateRangePicker","SingleDatePicker","DayPickerRangeController","calendar","constructor","props","handleDateChange","bind","state","startDate","endDate","e","setState","render","currentdate","Date","console","log","focusedInput","date","isBefore","isAfter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4CAAP;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,wBAA5C,QAA4E,aAA5E,C,CACA;;AACC,OAAO,uDAAP;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAkC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAtB;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAC,IADH;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAAX;AAKH;;AACDJ,EAAAA,gBAAgB,CAACK,CAAD,EAAG;AACf,SAAKC,QAAL,CAAc;AAACH,MAAAA,SAAS,EAACE;AAAX,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAE;AACJ;AACA,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB,CAFI,CAGJ;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,wBACI,oBAAC,eAAD;AACA,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWC,SADtB,CACiC;AADjC;AAEA,MAAA,WAAW,EAAC,2BAFZ,CAEwC;AAFxC;AAGA,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAHpB,CAG6B;AAH7B;AAIA,MAAA,SAAS,EAAC,yBAJV,CAIoC;AAJpC;AAKA,MAAA,aAAa,EAAE,CAAC;AAAED,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAAD,KAA4B,KAAKE,QAAL,CAAc;AAAEH,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAAd,CAL3C,CAKkF;AALlF;AAMA,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWU,YANzB,CAMuC;AANvC;AAOA,MAAA,cAAc,EAAEC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAc,IAAIL,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAd,KAAwCI,IAAI,CAACE,OAAL,CAAaP,WAAb,CAPhE;AAQA,MAAA,aAAa,EAAEI,YAAY,IAAI,KAAKN,QAAL,CAAc;AAAEM,QAAAA;AAAF,OAAd,CAR/B,CAQgE;AARhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAYI;AACA;AACA;AACA;AACA;AACA;AACA;AAlBJ;AAoBH;;AAxC8B;;AAyClC;AAED,eAAef,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n \r\n class calendar extends Component  {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDateChange=this.handleDateChange.bind(this);\r\n        \r\n        this.state={\r\n            startDate:null,\r\n            endDate:null\r\n        }\r\n        \r\n    }\r\n    handleDateChange(e){\r\n        this.setState({startDate:e})\r\n    }\r\n    render(){\r\n        // console.log()\r\n        const currentdate = new Date();\r\n        // minDate={new Date(2020, 9, 24)}\r\n        // maxDate={currentdate}\r\n        console.log(currentdate)\r\n        return (\r\n            <DateRangePicker\r\n            startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n            startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n            endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n            endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n            onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\r\n            focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n            isOutsideRange={date => date.isBefore(new Date(2020, 9, 24)) || date.isAfter(currentdate)}\r\n            onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n            />\r\n\r\n            // <DatePicker className=\"mr-5\"\r\n            //  dateFormat=\"dd - MM - yyyy\"\r\n            //  selected={this.state.startDate}\r\n            //  onChange={this.handleDateChange}\r\n            //  minDate={new Date(2020, 9, 24)}\r\n            //  maxDate={currentdate}\r\n            //  />\r\n          );\r\n    }\r\n};\r\n\r\nexport default calendar"]},"metadata":{},"sourceType":"module"}