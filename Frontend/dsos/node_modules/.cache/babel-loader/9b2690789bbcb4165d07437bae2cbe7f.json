{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ben78\\\\Desktop\\\\DSOS\\\\Frontend\\\\dsos\\\\src\\\\components\\\\StorageGraft.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass StorageGraft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Aggre: '',\n      SVMSArray: []\n    };\n  }\n\n  componentDidMount() {\n    let Aggre;\n    let SVMSArray;\n    console.log(this.props);\n    axios.get(`http://localhost:3000/Aggregate/Aggre/${this.props.Aggre}`).then(async res => {\n      Aggre = res.data[0];\n      await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`).then(res => {\n        console.log(res.data);\n        SVMSArray = res.data;\n      });\n      this.setState({\n        Aggre: Aggre,\n        SVMSArray: SVMSArray\n      });\n    });\n  }\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  getBar() {\n    return this.state.SVMSArray.map(SVM => {\n      let percentage = 0;\n      if (SVM.Amount !== 0) percentage = SVM.Amount / this.state.Aggre.TotalAmount * 100;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: SVM._id,\n        className: \"progress-bar progress-bar-striped\",\n        role: \"progressbar\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"bottom\",\n        title: `${SVM.name}--${SVM.Amount}GB`,\n        style: {\n          width: `${percentage - 0.5}%`,\n          backgroundColor: `${this.getRandomColor()}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, percentage, \"%\");\n    });\n  }\n\n  render() {\n    console.log(this.state.Aggre);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.Aggre ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, this.state.Aggre.Amount !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.Aggre.TotalAmount !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-success\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: `Free Space--${this.state.Aggre.TotalAmount - this.state.Aggre.Amount}GB`,\n      style: {\n        width: `${this.state.Aggre.Amount / this.state.Aggre.TotalAmount * -100 + 100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, this.state.Aggre.Amount / this.state.Aggre.TotalAmount * -100 + 100, \"%\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-danger tooltip\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: 'Data Error',\n      style: {\n        width: `${100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, Error, \"%\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-striped bg-success\",\n      role: \"progressbar\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: `Free Space--${this.state.Aggre.TotalAmount - this.state.Aggre.Amount}GB`,\n      style: {\n        width: `${100}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 22\n      }\n    }, 100, \"%\"), this.getBar()) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-grow spinner-grow-sm\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default StorageGraft;","map":{"version":3,"sources":["C:/Users/ben78/Desktop/DSOS/Frontend/dsos/src/components/StorageGraft.js"],"names":["React","Component","axios","StorageGraft","constructor","props","state","Aggre","SVMSArray","componentDidMount","console","log","get","then","res","data","setState","getRandomColor","letters","color","i","Math","floor","random","getBar","map","SVM","percentage","Amount","TotalAmount","_id","name","width","backgroundColor","render","Error"],"mappings":"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","sourcesContent":["import React, { Component} from'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass StorageGraft extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            Aggre:'',\r\n            SVMSArray:[],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let Aggre;\r\n        let SVMSArray;\r\n        console.log(this.props)\r\n        axios.get(`http://localhost:3000/Aggregate/Aggre/${this.props.Aggre}`)\r\n        .then(async(res)=>{\r\n            Aggre=res.data[0];\r\n            await axios.get(`http://localhost:3000/SvmRoute/SvmByAggreName/${this.props.Aggre}`)\r\n            .then((res)=>{\r\n            console.log(res.data)\r\n            SVMSArray=res.data\r\n\r\n            });\r\n            this.setState({Aggre:Aggre,SVMSArray:SVMSArray})\r\n         });\r\n    \r\n    }\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      }\r\n    getBar(){\r\n        return(\r\n            this.state.SVMSArray.map((SVM)=>{\r\n                let percentage=0;\r\n                if(SVM.Amount!==0)\r\n                    percentage=(SVM.Amount/this.state.Aggre.TotalAmount)*100;\r\n                return(\r\n                    <div key={SVM._id} className=\"progress-bar progress-bar-striped\"\r\n                    role=\"progressbar\"\r\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={`${SVM.name}--${SVM.Amount}GB`}\r\n                    style={{width:`${percentage-0.5}%`,backgroundColor:`${this.getRandomColor()}`}}>\r\n                        {percentage}%\r\n                </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        console.log(this.state.Aggre)\r\n        return(\r\n            <>\r\n            {this.state.Aggre?\r\n                <div className=\"progress\">\r\n                    {this.state.Aggre.Amount!==0?\r\n                    <>\r\n                        {this.state.Aggre.TotalAmount!==0?\r\n                            <div className=\"progress-bar progress-bar-striped bg-success\"\r\n                                role=\"progressbar\"\r\n                                data-toggle=\"tooltip\" data-placement=\"bottom\" title={`Free Space--${this.state.Aggre.TotalAmount-this.state.Aggre.Amount}GB`}\r\n                                style={{width:`${((this.state.Aggre.Amount/this.state.Aggre.TotalAmount)*-100)+100}%`}}>\r\n                                    {((this.state.Aggre.Amount/this.state.Aggre.TotalAmount)*-100)+100}%\r\n                            </div>\r\n                        :       <div className=\"progress-bar progress-bar-striped bg-danger tooltip\"\r\n                                role=\"progressbar\"\r\n                                data-toggle=\"tooltip\" data-placement=\"bottom\" title={'Data Error'}\r\n                                style={{width:`${100}%`}}>\r\n                                {Error}%\r\n                                </div>\r\n                            }\r\n                    </>\r\n                    :<div className=\"progress-bar progress-bar-striped bg-success\"\r\n                             role=\"progressbar\"\r\n                             data-toggle=\"tooltip\" data-placement=\"bottom\" title={`Free Space--${this.state.Aggre.TotalAmount-this.state.Aggre.Amount}GB`}\r\n                             style={{width:`${100}%`}}>\r\n                                {100}%\r\n                        </div>\r\n                    }\r\n                    {this.getBar()}\r\n                </div>\r\n                :\r\n                <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                }\r\n            </>\r\n            );\r\n    }\r\n\r\n}\r\nexport default StorageGraft"]},"metadata":{},"sourceType":"module"}